<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='QuickFacts Apr-19-2020 nyc &amp; des moines' inline='true' name='federated.0j4nbn41u9y77y1dfmqut10r5hbl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='QuickFacts Apr-19-2020 nyc &amp; des moines' name='textscan.1r2f9fo1c1182l14tqehy0pslspr'>
            <connection class='textscan' directory='C:/Users/skyla/Desktop/Boot/GitHubRepo/Bikesharing' filename='QuickFacts Apr-19-2020 nyc &amp; des moines.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1r2f9fo1c1182l14tqehy0pslspr' name='QuickFacts Apr-19-2020 nyc &amp; des moines.csv' table='[QuickFacts Apr-19-2020 nyc &amp; des moines#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Fact' ordinal='0' />
            <column datatype='string' name='Fact Note' ordinal='1' />
            <column datatype='string' name='New York city, New York' ordinal='2' />
            <column datatype='string' name='Value Note for New York city, New York' ordinal='3' />
            <column datatype='string' name='Des Moines city, Iowa' ordinal='4' />
            <column datatype='string' name='Value Note for Des Moines city, Iowa' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fact</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fact]</local-name>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias>Fact</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fact Note</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fact Note]</local-name>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias>Fact Note</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New York city, New York</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New York city, New York]</local-name>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias>New York city, New York</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value Note for New York city, New York</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Value Note for New York city, New York]</local-name>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias>Value Note for New York city, New York</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Des Moines city, Iowa</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Des Moines city, Iowa]</local-name>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias>Des Moines city, Iowa</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value Note for Des Moines city, Iowa</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Value Note for Des Moines city, Iowa]</local-name>
            <parent-name>[QuickFacts Apr-19-2020 nyc &amp; des moines.csv]</parent-name>
            <remote-alias>Value Note for Des Moines city, Iowa</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Des Moines' datatype='string' name='[Des Moines city, Iowa]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='New York City' datatype='string' name='[New York city, New York]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Value Note for Des Moines city, Iowa]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Value Note for New York city, New York]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.541613' measure-ordering='alphabetic' measure-percentage='0.458387' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='201908-citibike-tripdata' inline='true' name='federated.1idow7z1jvna34122zsc60k0irez' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201908-citibike-tripdata' name='textscan.0vala0t1lmql4g10a7bzc1869tgq'>
            <connection class='textscan' directory='C:/Users/skyla/Desktop/Boot/GitHubRepo/Bikesharing' filename='201908-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vala0t1lmql4g10a7bzc1869tgq' name='201908-citibike-tripdata.csv' table='[201908-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201908-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number to String' datatype='string' name='[Calculation_1400338050879377408]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [gender]=0 then &quot;Unknown&quot;&#13;&#10;ELSEIF [gender]=1 then &quot;Male&quot;&#13;&#10;ELSEIF [gender]=2 then &quot;Female&quot; END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.459667' measure-ordering='alphabetic' measure-percentage='0.540333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='tripduration' />
        <field-sort-custom-order field='starttime' />
        <field-sort-custom-order field='stoptime' />
        <field-sort-custom-order field='start station id' />
        <field-sort-custom-order field='start station name' />
        <field-sort-custom-order field='start station latitude' />
        <field-sort-custom-order field='start station longitude' />
        <field-sort-custom-order field='end station id' />
        <field-sort-custom-order field='end station name' />
        <field-sort-custom-order field='end station latitude' />
        <field-sort-custom-order field='end station longitude' />
        <field-sort-custom-order field='bikeid' />
        <field-sort-custom-order field='usertype' />
        <field-sort-custom-order field='birth year' />
        <field-sort-custom-order field='gender' />
        <field-sort-custom-order field='Calculation_1400338050879377408' />
      </field-sort-info>
    </datasource>
    <datasource caption='mcdonalds' inline='true' name='federated.0h7s1so0u450ga1elearw1nud8vz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mcdonalds' name='ogrdirect.0ahynz51t688o91dzzljm158vh7f'>
            <connection class='ogrdirect' directory='C:/Users/skyla/Desktop/Boot/GitHubRepo/Bikesharing' filename='mcdonalds.geojson' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2020.1\local\proj4' password='' port='0' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation connection='ogrdirect.0ahynz51t688o91dzzljm158vh7f' name='mcdonalds.geojson' table='[mcdonalds.geojson]' type='table'>
          <columns>
            <column datatype='string' name='storeNumber' ordinal='0' />
            <column datatype='string' name='storeType' ordinal='1' />
            <column datatype='string' name='address' ordinal='2' />
            <column datatype='string' name='city' ordinal='3' />
            <column datatype='string' name='state' ordinal='4' />
            <column datatype='string' name='zip' ordinal='5' />
            <column datatype='string' name='phone' ordinal='6' />
            <column datatype='string' name='playplace' ordinal='7' />
            <column datatype='string' name='driveThru' ordinal='8' />
            <column datatype='string' name='archCard' ordinal='9' />
            <column datatype='string' name='freeWifi' ordinal='10' />
            <column datatype='string' name='storeUrl' ordinal='11' />
            <column datatype='spatial' name='Geometry' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>storeNumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[storeNumber]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>storeNumber</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>storeType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[storeType]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>storeType</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>playplace</remote-name>
            <remote-type>129</remote-type>
            <local-name>[playplace]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>playplace</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>driveThru</remote-name>
            <remote-type>129</remote-type>
            <local-name>[driveThru]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>driveThru</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archCard</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archCard]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>archCard</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freeWifi</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freeWifi]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>freeWifi</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>storeUrl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[storeUrl]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>storeUrl</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[mcdonalds.geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>12</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Arch Card' datatype='string' name='[archCard]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Drive Thru' datatype='string' name='[driveThru]' role='dimension' type='nominal' />
      <column caption='Free Wifi' datatype='string' name='[freeWifi]' role='dimension' type='nominal' />
      <column caption='Phone' datatype='string' name='[phone]' role='dimension' type='nominal' />
      <column caption='Playplace' datatype='string' name='[playplace]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Store Number' datatype='string' name='[storeNumber]' role='dimension' type='nominal' />
      <column caption='Store Type' datatype='string' name='[storeType]' role='dimension' type='nominal' />
      <column caption='Store Url' datatype='string' name='[storeUrl]' role='dimension' type='nominal' />
      <column caption='Zip' datatype='string' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.608195' measure-ordering='alphabetic' measure-percentage='0.391805' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;DES MOINES&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='August'>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1idow7z1jvna34122zsc60k0irez].[hr:starttime:ok]</rows>
        <cols>[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{CDFEEEE9-E76F-45A6-BBA0-93CCFC9EE35F}' />
    </worksheet>
    <worksheet name='Avg Trip Duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[birth year]' derivation='None' name='[none:birth year:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1idow7z1jvna34122zsc60k0irez].[avg:tripduration:qk]</rows>
        <cols>[federated.1idow7z1jvna34122zsc60k0irez].[none:birth year:qk]</cols>
      </table>
      <simple-id uuid='{3D047684-5D5D-4376-BC3A-731D61F7CF73}' />
    </worksheet>
    <worksheet name='Bike Repairs'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:end station longitude:qk]' field-type='quantitative' max='-8226497.5453436775' min='-8246218.7933293702' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:end station latitude:qk]' field-type='quantitative' max='4977346.9165201318' min='4965167.4200618612' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
              <size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
              <text column='[federated.1idow7z1jvna34122zsc60k0irez].[none:bikeid:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1idow7z1jvna34122zsc60k0irez].[none:end station latitude:qk]</rows>
        <cols>[federated.1idow7z1jvna34122zsc60k0irez].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{10D1949A-1E51-4D70-A997-7DE398123680}' />
    </worksheet>
    <worksheet name='Bike Utilization'>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:tripduration:qk]' />
              <text column='[federated.1idow7z1jvna34122zsc60k0irez].[none:bikeid:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D69B4AA3-B482-4DA7-AA4A-63BCA2DFB940}' />
    </worksheet>
    <worksheet name='Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1idow7z1jvna34122zsc60k0irez].[none:usertype:nk]' />
              <wedge-size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
              <size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{04250499-EC4A-4CB3-A6C2-40AB478F9FA4}' />
    </worksheet>
    <worksheet name='Des Moines MCD'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Des Moines McDonalds</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mcdonalds' name='federated.0h7s1so0u450ga1elearw1nud8vz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h7s1so0u450ga1elearw1nud8vz'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;DES MOINES&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h7s1so0u450ga1elearw1nud8vz].[Longitude (generated)]' field-type='quantitative' max='-10385380.5732041' min='-10453359.675884739' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h7s1so0u450ga1elearw1nud8vz].[Latitude (generated)]' field-type='quantitative' max='5120563.6158960629' min='5080155.7602366768' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0h7s1so0u450ga1elearw1nud8vz].[clct:Geometry:nk]' />
              <color column='[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]' />
              <geometry column='[federated.0h7s1so0u450ga1elearw1nud8vz].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h7s1so0u450ga1elearw1nud8vz].[Latitude (generated)]</rows>
        <cols>[federated.0h7s1so0u450ga1elearw1nud8vz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8D24B554-CAF8-4762-AFA1-39C4EBECD40A}' />
    </worksheet>
    <worksheet name='Ending Locations'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:end station longitude:qk]' field-type='quantitative' max='-8225562.5580145111' min='-8247185.2829282032' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:end station latitude:qk]' field-type='quantitative' max='4979203.44273932' min='4965849.6275195368' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
              <size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1idow7z1jvna34122zsc60k0irez].[none:end station latitude:qk]</rows>
        <cols>[federated.1idow7z1jvna34122zsc60k0irez].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{041AA322-9CEA-4421-A4B0-A44E43B3A49A}' />
    </worksheet>
    <worksheet name='Gender Breakdown'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>Gender Breakdown</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column caption='Number to String' datatype='string' name='[Calculation_1400338050879377408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [gender]=0 then &quot;Unknown&quot;&#13;&#10;ELSEIF [gender]=1 then &quot;Male&quot;&#13;&#10;ELSEIF [gender]=2 then &quot;Female&quot; END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1400338050879377408]' derivation='None' name='[none:Calculation_1400338050879377408:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1idow7z1jvna34122zsc60k0irez].[none:Calculation_1400338050879377408:nk]' />
              <wedge-size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3D47D8DB-B041-4183-BCCE-A9B60B68E966}' />
    </worksheet>
    <worksheet name='MCD NYC vs Des Moines'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>NYC vs Des Moines</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mcdonalds' name='federated.0h7s1so0u450ga1elearw1nud8vz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h7s1so0u450ga1elearw1nud8vz'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city:nk]' member='&quot;DES MOINES&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;NEW YORK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0h7s1so0u450ga1elearw1nud8vz].[sum:Number of Records:qk]</rows>
        <cols>[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{735B6BBA-78BC-4C7C-AEF2-6DBA49E120D4}' />
    </worksheet>
    <worksheet name='NYC  MCD'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>New York City McDonalds</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mcdonalds' name='federated.0h7s1so0u450ga1elearw1nud8vz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h7s1so0u450ga1elearw1nud8vz'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;NEW YORK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h7s1so0u450ga1elearw1nud8vz].[Longitude (generated)]' field-type='quantitative' max='-8192180.3649467286' min='-8255132.8609074736' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h7s1so0u450ga1elearw1nud8vz].[Latitude (generated)]' field-type='quantitative' max='4996733.4892390221' min='4963249.8790971283' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]' />
              <lod column='[federated.0h7s1so0u450ga1elearw1nud8vz].[clct:Geometry:nk]' />
              <geometry column='[federated.0h7s1so0u450ga1elearw1nud8vz].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h7s1so0u450ga1elearw1nud8vz].[Latitude (generated)]</rows>
        <cols>[federated.0h7s1so0u450ga1elearw1nud8vz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5312009C-2132-476C-AF74-AAC35B7FC173}' />
    </worksheet>
    <worksheet name='NYC vs Des Moines'>
      <table>
        <view>
          <datasources>
            <datasource caption='QuickFacts Apr-19-2020 nyc &amp; des moines' name='federated.0j4nbn41u9y77y1dfmqut10r5hbl' />
          </datasources>
          <datasource-dependencies datasource='federated.0j4nbn41u9y77y1dfmqut10r5hbl'>
            <column caption='Des Moines' datatype='string' name='[Des Moines city, Iowa]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Fact]' role='dimension' type='nominal' />
            <column caption='New York City' datatype='string' name='[New York city, New York]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Des Moines city, Iowa]' derivation='None' name='[none:Des Moines city, Iowa:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fact]' derivation='None' name='[none:Fact:nk]' pivot='key' type='nominal' />
            <column-instance column='[New York city, New York]' derivation='None' name='[none:New York city, New York:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:Fact:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Female persons, percent&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Households, 2014-2018&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Land area in square miles, 2010&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Mean travel time to work (minutes), workers age 16 years+, 2014-2018&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Median household income (in 2018 dollars), 2014-2018&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Persons 65 years and over, percent&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Persons under 18 years, percent&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Persons under 5 years, percent&quot;' />
              <groupfilter function='member' level='[none:Fact:nk]' member='&quot;Population estimates, July 1, 2018,  (V2018)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:Fact:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:Fact:nk]' value='524' />
            <format attr='width' field='[federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:New York city, New York:nk]' value='104' />
            <format attr='width' field='[federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:Des Moines city, Iowa:nk]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:Fact:nk] / ([federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:New York city, New York:nk] / [federated.0j4nbn41u9y77y1dfmqut10r5hbl].[none:Des Moines city, Iowa:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{7AFF035A-EA6B-4ED9-8E4C-774A4B341159}' />
    </worksheet>
    <worksheet name='Number of Records'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>Number of Records</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='14'>&lt;</run>
                <run fontsize='14'>[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]</run>
                <run fontsize='14'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4D992C1A-43CD-4E8A-AA7B-6E905F6BAAEA}' />
    </worksheet>
    <worksheet name='Starting Locations'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201908-citibike-tripdata' name='federated.1idow7z1jvna34122zsc60k0irez' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1idow7z1jvna34122zsc60k0irez'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:start station longitude:qk]' field-type='quantitative' max='-8224582.6649504993' min='-8244726.3372650826' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:start station latitude:qk]' field-type='quantitative' max='4981652.4867422795' min='4967220.6948740603' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
              <size column='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1idow7z1jvna34122zsc60k0irez].[none:start station latitude:qk]</rows>
        <cols>[federated.1idow7z1jvna34122zsc60k0irez].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{FF208F5E-F9ED-48AF-80E4-D7CEEB831E38}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='MCD'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='95875' id='3' name='MCD NYC vs Des Moines' w='33600' x='1100' y='1500' />
        <zone h='47875' id='4' name='NYC  MCD' w='61800' x='36800' y='49625' />
        <zone h='46250' id='5' name='Des Moines MCD' w='62100' x='36800' y='2250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='8' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='95875' id='3' is-fixed='true' name='MCD NYC vs Des Moines' w='33600' x='1100' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46250' id='5' is-fixed='true' name='Des Moines MCD' w='62100' x='36800' y='2250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47875' id='4' is-fixed='true' name='NYC  MCD' w='61800' x='36800' y='49625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DD6C0D6A-EBC7-4A20-8AA5-1EC31D5BC28A}' />
    </dashboard>
    <dashboard name='NYC Citi Bike'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-orientation' id='dash-text_3' value='0' />
          <format attr='text-align' id='dash-text_3' value='left' />
          <format attr='vertical-align' id='dash-text_3' value='center' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone forceUpdate='true' h='3125' id='3' type='text' w='25329' x='220' y='651'>
          <formatted-text>
            <run fontsize='16'>NYC Citi Bike Dashboard</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='10996' id='7' name='Number of Records' w='18898' x='77067' y='2282' />
        <zone h='17220' id='8' name='Gender Breakdown' w='18209' x='78346' y='16805' />
        <zone h='33402' id='6' name='Avg Trip Duration' w='72638' x='5610' y='4046' />
        <zone h='58817' id='21' name='Starting Locations' w='44291' x='3150' y='38382' />
        <zone h='58921' id='24' name='Ending Locations' w='47047' x='50000' y='38278' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98340' id='27' param='vert' type='layout-flow' w='98426' x='787' y='830'>
                <zone forceUpdate='true' h='3125' id='3' type='text' w='25329' x='220' y='651'>
                  <formatted-text>
                    <run fontsize='16'>NYC Citi Bike Dashboard</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='10996' id='7' is-fixed='true' name='Number of Records' w='18898' x='77067' y='2282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33402' id='6' is-fixed='true' name='Avg Trip Duration' w='72638' x='5610' y='4046'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='166' h='17220' id='8' is-fixed='true' name='Gender Breakdown' w='18209' x='78346' y='16805'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58921' id='24' is-fixed='true' name='Ending Locations' w='47047' x='50000' y='38278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58817' id='21' is-fixed='true' name='Starting Locations' w='44291' x='3150' y='38382'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4E27D8C6-E604-4007-A4AF-8C53ED77DF3C}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='How is NYC Citi Bike performing?' captured-sheet='NYC Citi Bike' id='6'>
                    <capturedDeltas>
                      <worksheet name='Ending Locations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:end station latitude:qk]' field-type='quantitative' max='4983987.7774939444' min='4960102.8116665632' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1idow7z1jvna34122zsc60k0irez].[none:end station longitude:qk]' field-type='quantitative' max='-8223994.0308465259' min='-8245736.6439866703' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Demograpgic information: NYC vs Des Moines' captured-sheet='NYC vs Des Moines' id='7' />
                  <story-point caption='McDonalds: NYC vs Des Moines' captured-sheet='MCD' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7258CF22-2AD2-4E0A-99FF-AEA3B4E934C3}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Number of Records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2DB54515-697D-4391-9384-DBAB6863F605}' />
    </window>
    <window class='worksheet' name='Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[none:usertype:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4EBD5804-EAB7-4940-A54A-0BE49108D81D}' />
    </window>
    <window class='worksheet' name='August'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{02B0C6E5-C9EE-43A3-8FA7-29E1175EEDE1}' />
    </window>
    <window class='worksheet' name='Starting Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{57B5CB5C-9F4C-4F05-B876-EE5E45C1E447}' />
    </window>
    <window class='worksheet' name='Ending Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5781E300-12D3-46EB-98A0-3252C1129E99}' />
    </window>
    <window class='worksheet' name='Gender Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[none:Calculation_1400338050879377408:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DC4E3C1B-5696-4F0D-B522-F88E1B60E823}' />
    </window>
    <window class='worksheet' name='Avg Trip Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{91684A51-80CF-4102-A7BB-1E2811BD0593}' />
    </window>
    <window class='worksheet' name='Bike Repairs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{04FEACE9-0B27-4BBD-B074-07B0E3CE681B}' />
    </window>
    <window class='dashboard' name='NYC Citi Bike'>
      <viewpoints>
        <viewpoint name='Avg Trip Duration'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ending Locations'>
          <zoom type='entire-view' />
          <highlight field='[federated.1idow7z1jvna34122zsc60k0irez].[sum:Number of Records:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Gender Breakdown'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Records'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Starting Locations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2E1E77EA-D526-4824-B610-0D5F83E2467D}' />
    </window>
    <window class='worksheet' name='Bike Utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0512A9D0-503C-4E23-9BEC-6EF4C02FACD4}' />
    </window>
    <window class='worksheet' name='NYC vs Des Moines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C7E149E2-4408-4F84-A94D-25E1C6879CE3}' />
    </window>
    <window class='worksheet' name='MCD NYC vs Des Moines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{88A54B14-3182-4EB3-B8F6-97942C979516}' />
    </window>
    <window class='worksheet' name='NYC  MCD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{79AF49D7-0515-4CDB-BF58-52AC67F923C0}' />
    </window>
    <window class='worksheet' name='Des Moines MCD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h7s1so0u450ga1elearw1nud8vz].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0DD15283-115A-4820-886F-F256081E088A}' />
    </window>
    <window class='dashboard' name='MCD'>
      <viewpoints>
        <viewpoint name='Des Moines MCD'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MCD NYC vs Des Moines'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NYC  MCD'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A93D9CB3-EE07-49FD-9BB5-86ED226DC95C}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C5935B57-B970-40E3-88A1-B0BF0A15B234}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Des Moines MCD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MCD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NYC Citi Bike' width='192'>
      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
      bqB/6Gy7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NYC vs Des Moines' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydZ5wc1ZW3n6quzml6enLOSqNRzjmAJCSQQIBExgaDvbaxvfa+XofdZde7
      zsaAwWBsAwKRFBAgIZTzjMJIGo1GcXLO3dPTOdf7YQaQQJJJxhj182l+01W3bt26/1vn1j3n
      HkGWZZkYMa5SxH90BWLE+EcSE0CMq5qYAGJc1cQEEOOqJiaAGFc1MQHEuKqJCSDGVU1MADGu
      amICiHFVExNAjKuamABiXNXEBBDjqiYmgBhXNTEBxLiqiQkgxlVNTAAxrmpiAohxVRMTQIyr
      mpgAYlzVxAQQ46omJoAYVzUxAcS4qokJIMZVTUwAMa5qYgKIcVUjXelHh8OB3W7/vOoSI8bn
      jnClrRH9fj9+v//zrE+MGJ8rVxRAjBhfdmJzgBhXNTEBxLiqiQkgxlXNJxRAO2u/vYAZM2Yx
      a9YsZs1ayMr7/krVZ1u3i+nZwy/v+yVrT7Xi/XteJ8ZliYb8ePwhol+iaeMVP4P+LeY/vJn/
      mqf/rOoS4wtO9/Zf8o3jo3n624tINqv/0dX5TPhUAvgwMpGAF4etB4c3jKDUE2eNx6xX4LN1
      4wpBJBgkEIqgMFqwiD76nD4iohpTYgqJBgVBnwt7tw1PKAqiCkO8lXiTHuUHrxR00tnRiycU
      RaHUYUlOIU7z/gst5HXQ53QSDAmEg0EiSj0JiVaMGiUiQZzdXfS6AkRFCb0lmWSLmojfjdPh
      RtAaibicRHVm4gzgttnp9wSJChL6+GQSzRok2U9PRydOfwQkDeb4ROJNaqJ+F/39DgJRiYjf
      S1BWYoxPwGLSIUU89Hb34vSFkAURbXw66ZbLdKSgB5vDhS8YIhoOEoooMSQkYjVqkEQIOrto
      73ETlkVUegtJyRZUER/9TidBQYM67MIr64iLj0MK9mOzOfAGI6A0k5Iej04I0NvWSX8wiqjU
      YrYmEW8Q8LucOB0+opKM3xtAVhqwJsaj9PfQ3usi5OymsaEOV3wKWVnxqD7bDvS586kE0Nd4
      khMntCAoUJvTyEtX031mL2+9sY2T7V5kdTKjr72BpfOyqX3ll2zqiEMT8tHT1URP/HRuKfZy
      /Nh5Ol0CuTf/iJ8uTaen/hCvP/cWp/uDhCJqsmYsYcUNcxl64YVlD22HNvLsW2U0OwKodMmM
      WvxVbr8mH+OgBroqN/Piph30hFMRXV10RRKYccs93DK9EJWtnLde3ERZbQ9BpZrk4dfx1Xvm
      om3aw/oXNhMauQCp9hz68fOYmt3FzvU7qGzzgFJP4cKv8cCCAqL17/D0n7bS4omANo6CCYu5
      9aZZ6JsOsXbdS9QrijE5aqjtCFCw6F7uuWE6cS3v8NzqfdT0eolKajKv+S4PLy+8dON2VfDq
      C5s5bY9gwkVPd5SUWSv42i1TyZR6KXtjFW8drMcZUmJIG8mSe+9iiqqOt19/mcrICMaJtbSY
      JrNozig8x99i076TdLojSPEzeODHS8lo3cvzz79DjSMEugSGz7yFO6/Poe3AejasPYtimJW+
      2ho6gzksue9uhrs28trOKuwd9TzZfQh17o38739dT/Kn6UBfAD6VAOr3vMTzVRIotCSVLOXe
      aw2U795CnWkGt8xNoP/0HnYfLSMn14IeUKVP5PZbrqXQ9xbfvr+U8Dd+xP/epaH6tf/mv49V
      03dDJjpLFhMW38ooSaD//D421VZxvmk0QzMvuLC7klV/2Im04nbuSRSxndvF2y+9zsip/8ZU
      4/uHifoMJs3/BjeOMdCw6XF+U3acScPicL/yJ3aFF3L73RkIrjp2r32eDaMmcbsFfLZuOu0C
      N979dabkCVS8tAenaSQ33ziP4hSRQNiITmxjzWOv4F/0cx65PodA4x5eeOIV1meXcHcCyKKB
      nIk3cs/sNJrefoRXm5vo6R9L/9E9dFpncM+dE8lNUOLx/w0zQjSQM3UBX72+BGX9m/ziV/s5
      PmUYevtqHt0Z5Z5778EScXBm9wZefXMko24xgreX1t5+5t74Fa6blIXv8PO8dtTJ8JU/4ofj
      01D0uQjqetjwyAt0Tb+fOwpUOBoPs3fLK5SN/xHZyIjGLCYvv4+ZqW289etXaW/qIuGm7/I9
      2UH18dH8JmYCDTDu3l9dMAeIYKs7RFt9Ne1hLXv6Bl6OcWmZJOpFvIAxLh6DRoUUllBgIS0r
      DpUYJi4+DiJRIgEvtvPH2bn9JB6FRNjeSqdiGB9aq+tq4LzTi+7oLrZKIqCgcHw2hujFhym1
      eox6PSqlkaKifJSHHNgCrTTXOPHIx9m19TSiIKAomkS2MTLQINZMRk2by7QCEyJh0ocNJb7z
      OEd2vkmTJZmMUVNJNjZSXZfP9Lm5GCQJdeIIiodt5s3mdkgASWfAYI3HqNai0ahQSgNNnV4y
      k7RN59mzrZMqi5Wc4tlk5YDmcg2s1GEy6tColBiGDKFQOoTNFqC1thqXT6J8xxZEQQBlEWOy
      jEQApAQKR09jxpQ8DGKQ5s4OjAUjGZWXjkGSIDEerfcENXU+euIPsL1+4FKJI4dgVQzUU2+M
      w2oxodb2olEqP2s7+QvFZ3hvAiqllvi0fIoL7uQbS4uxSEFc7iCSysvRj1BC2NVN9akq7DnX
      86O7xuI7uoYn9l3CF8loJUmXyLBbvs2dY1JQRoN4XW5k7cWHybKMLEeJhlw0N7WBLhmTKp7E
      RB1JGct46O4pJGtlgh4X7qhEoAnUajVmk2nw81gIfc4UFt80BFt3Pae2v8lfayD/O7kkJvRS
      d95GYFwCQXcH7Z0BrGPNQOdl7i6IIn0mt909lp72Gs7tW88TeyIMWXUPeZdrEFkmGpWRoyH6
      m5poFYyMMKmwJCaiTczjtu/dzQirikjAi8cTRfDVg1aD1mzCIAKIGExm/LWdtPU6yLdaEL1+
      wkoLCVYDhkUP8NDsTLQE8btdBFXQdIXno5CUCB4XzkiUpGgUWRT/6b+jf4YCENHFpzF02BCq
      Dq7j+b6jWNUKBGs+U8Zn/u3TAVGjx5JoJlpRylvr29H0N9LnN3z4wMRRLJm9k3VrVhOuTEQt
      KtBbshg7bxbGC2Zl/q4ayrasoedQgPY2FyPHzSPHkkn6whnsXreRF1edI1ErodAYyR43m4IP
      XchHV/Vxjp9twyvKRCUTyYlmJG0h827LY9XGl3ihykzE14NNPYYFY1LBcf4ydxei68xBjjb1
      EZQFUMaTnmxGigTpqy9n3zkFY6+dTOaFloW/k9Ol7/BqZxm+tlaiYyZSkmUmI+k65uxax0ur
      nqfIqkFU6EjIHcvknA9eUyJlxDSGnN9J+Tsv03DIgCRmMf3mscy5pZCn33qOVY3Z6BQCWksy
      I6ZMuOLzMeYMZ4j3IK+/4iM1azLLri/BdMUzvvgoHn744Yc/0YmSgZTCYrLiFO/9T1RqiUtK
      I1EbxR8IgUKHNS2LnIwkTDoD8ZmFZCaZUEsikiGJwuIs4kQRQVKhT8pmRGEqVlMc2rCfoGQk
      LSefgqKhDMlJx2rUoNDFk12USYIhgcyCTAyyF28ggqDUk5BeQH62Fe3gkORsreJkdRMRfSYJ
      JgOpxbOYP3koSUY1ptQ8Mk0iXq+fCBJ6azr5+TkkGFTozMmk5+Zi1QIIEPThdDrxBKNI1kJm
      zJnM0GQrqflFmEN2+n1R1JY8Js5bwLgcPQpBRGNKJD0zlySjhCBKGBKzyE5PwSR5cThceIJR
      RHMe06+fw3B9gFNvP8VbrVlMmZSP+d0hydlMeWUtNllPqtWIMW0k8+dPIj/BgNKURmGWkYjH
      SzACKoOV9Px8shL0qLRxpGVkkxk/8DqUjElkpcahCHrx+aMozekUFWWTXziEeIUXrz8CCi1x
      qbkUZKdgUqsxJaaRmZOMQRIQFQYSc7JJTzShj08iVQc+fwhZn87woqR/+q9AX1pnuNaDL7Pm
      UAtDr/0G1434go5TcgRP91FefuYQeXffz5xs/fsmRcsBnnztKIqSBdx57TAu8R6M8RnwpRWA
      t7eR5l4vptRC0swfXEX4giBHCXo7qKmFvFHpXDSF8fRQ3WxDiEslN9X8pZ6I/iP50gogRoyP
      wj/7JD5GjE/FFd+sPT09dHd3f151iRHjc+eKJlAkEiEcDn+e9YkR43MlNgeIcVUTmwPEuKqJ
      CSDGVc0n/Lwcor+9Fb8pm2SDCMiEgx4cPX3I5lQSDZ/PV2tPdz0OVQbpcR99PTLk7KTNryPD
      akRSCO//EA3jd/fj8CiwpMbxcXwdZTlKOOCmr9eOyx8GSYPJEo/FqEMSZcLefnptfQOryXor
      yQkm1AoRiBIJeHA4nPjDEuaUZIwXNV2UgNNGr72fkDaRlHgjGuWFY5aMHI3gc/bSa/cQjAoo
      dUbirfEY1AqEaBC3w47d4SYkqDFZE4k3qFGIAnI0jN/loM/pIaJLItM6uAohRwh4ndhtfXiD
      MgqtCas1Dr1aiSjwpeMTukJ0sfHHX+Md43Jm56mACI7WQ7zwq99xwjiDqXmfT5TYwd8v40n7
      ApYUmz/yOd3bf8W/vB3iuvF5aFXvu3EQtHN251qeW9NO9jXFJHyMekSDbhqOvMErq9eyacce
      9h2soNGtIiUrE6vCyZk963nxpTVs3rWPQ1VdaLMKyLZqEfwdnDywhy2b1rB+7UmM0+eQf+GS
      b8jBibdf5MnHfs0b7QmMHpp/8eAiywT769iz5nleXr+FHXv3caSqhaA+g+wME+HuKratWc3L
      695mT+lxalwGsnNTMWsk3M3l7N+1m3WvPM367iEsn5AGyIQ8HZzYtY7VL65jy979lB1vwKtL
      JjPFgk755TMYvnx39LkjE/J76e7oZ9iKH/HIH5/kv786mXBDGaWnO3HV7eWt0i6yl3yf3z3+
      c+7KPM8rrx+nNxAh7Kjm8PkAGROKSQ19sNwo7qajHGs3kVWQR7rlUpeOErTV0yxM4sGfP85T
      j/8Ht4yIcnrLHmocdqp27uS0L5eVP/09j/zwOsSjb7P7XDf+iExrxT6aNMOYXGQecKMGIIKt
      9jgHKxrJWf5THn3yt3x9YoTSHXs40+okeokq/LPz97FV5BCunlbqquvp9kRQWTIpKsol2awh
      2H6SM4F0irMsqBQCzoYj1EojGZsu4equ5/TZZhwhUFvSKCwoIDNeibujnnO1Tdg8UVSWHEaW
      5BKvUQIyfkczlaXVdLnBkJTHiJG5mEU/9vZGampbcAREDMm5DCnMIF5/sakkyxFcbac5ebYD
      d9BDZ003QeKBKD57G3XVtbQ5AghqCznDhpKdZEZ9iSFDZYxnwo3/gkqlgGgQlyihUkA04qex
      +jyh5GxKCjMxa7VMvHYaf/nJCap9M5iZOoevfytAd/0WTn/AEVn2dXOioh4xLZ9iUyp9vku0
      s6DAkDmHrzygRoVMxK9AUokIRIj2tlLTJmApKKYww4xRMY3ZRa/w+rlOfCXpDL/x3xga9HD8
      hZcg+G6BUaLRMCqNGYvZjEqhxmQ2oZcgFI0S5cs3Yn4qAbQceoN1fWoggsdeR70LcpDx25so
      37mRA2f6kfQK/J4jnJu4kKWzR0Hlel7sWcJ/3jIGlUagff+fWW14mGKzzMmdL7HpnBaTQURh
      daI2p5Is93KkdB8n6m0EI1F87sM0hO/ktonZIMu422s5JfbS1GKjL1yO2/Jtpiir2f/OFo43
      h1FrZXyBY7TMXcq1ky4OP4zaT7HxhZc5FYzDpI7g7rYTUgIBO9VH9rKl7BwBnQG1aCZgTiHZ
      eikBCIiiEpUK5JCXnobj7Cw7TcgyhDEFRny7vOg1cei0Aza2IjmVDE85Hf0RZAtc2qwOYqs5
      zpkeJRlTR5JRtxcuKQABQa1GJUcJuns4f3AXh84HSZk0gRyVk0OihNJkQKcA0JOcYqGzpYdw
      JAIoLlGgCmvWSIZkt3B0z8u8ek5Db30/eaOuYUhK3JfSH+lT3ZPP0U1HhwTI+J0OfBGAID11
      VZyu9TB02Te4YZSBzl3P8fjBE5wfknsJn/sBwj43HQ0NRFJuZ/asfJLizFjNGnorD7DrUBVy
      4hDykiQ6mrfw+p4JLB2VAYKAIaWE6+4pRuw6xYbnH+dsQycZoZPUtBuZ+ZW7mZEe5OTaJ3n5
      eBUjCjIvsu37TmxgbWMOP/vF/QzXO6ja/CprDwERJ13tHTjlVKbMmcnQRDN6S8J7rtYfRibs
      c9BwbAfby6rpNw9l7pzZlKRLHP/goaKIJESJXsGeiDhbqThZT8g8jBEFSfjq3v/NXbOHzeXN
      eINRiubdw9SMKF5bLQc2b+F4s5/E0fO5Zu5IEuylHypXVCgGtzS53NJPlHA0ikIhIUW92Lo9
      +AQtWlFAliPISJcR7D8vn0oARQsf4Nvz9EAYe9MBVv3mWaIE8bo9iIoEsjKT0UiQk5OF+kAL
      Dp//AnvzQgTUphRGTl9EV2UNh3eeBl0242ZMw9xnJxgFk1qFQqEkY9JSbs7MQasSAQFNfAIW
      tRKXpEGtlImGvbj7Q0jqDDIzTKhUkJObSrDdjdcfuOiqjrZmvAULGGlVQkBAIQ0+YE0iQ8eN
      weY/TX3pds6ipXDaQmaPzkGl+HAXiAa9tJ3YwrpNJ9GOW8LNc8eRb9Ug4kdv0ODrcOEPBAA1
      0a5OWjTJTItTXKYzhbDVVVF+6Ai1ShtB+xmc1eep8fSxxpLJPUOCFxwrE3S3Uvb6ara1JDN3
      6QqmjcrBrAR8OgzRCB63F18E9AofXR12kuOtSIrLPXYvneePc+J0kGG3P8D8fCV9FW/wx9eP
      cTIvi4S4tMuHb/6T8nd4q6kxmIxEI/U0NHYwOt5AW209fslIvE6LBLj7nYSjEYK2Zs40uWBE
      lKgA2tRJLMmV6W84ytZtpzisz2RRdjwavZ+c8fNZOikHXdRBa0/0kh0RAFGLMU5F2N9IY1M/
      2VkBamvaUCtHodde/PjMSSkoyqqpcU8gV/bjcroJEQ+BKNqEfMYtykN2tFG28WUOVmQzIj+D
      OPUHXauj+F3NlO/YhSPnLu5ePIV03buvCg2ZBfkIJxs5W99GYUIctfvK8QyZRoFWuoz9I6BK
      KmLWohsoGjR7Oju1aAQTVpOOuKFjuXXsYB2iIezHdrPhQIgZP1zJNSMS3t8+xpxOflKUfY3n
      aOgsQhut4OB5HQW3pKBWXe5VFiUc9uP1eAmHIoCKSDiA1+8lGLn00PXPzt9BAEoSCkoYNbSJ
      Xa8/ys82ioQjBopnzmZomgl9oBDzprf47S/2k5Q5jARhwBYN++yc37+Ggy1eQkE/PjGVcenJ
      ZA6zMOXsG+x580mqNqtRq00kjL+O+xLjLn150UDmiDEMb32bfX/+JXuUEJUSmHJtCRlW9UWm
      dNyYG1my41ke/98aEo06lH43YbIg5Kalai9bj9Th8UfxuHXkjknEqPVxcsPT7BBm8vVFxejU
      CiCCz9PAidJaqtPf4o8tWwcKN+Qwdf4C5gyfwTUldrZt/RP/twXC0USWLp9Ailqic8+TPLG9
      lYCng7oOO3W/+QmVQ0qYu2QF0xYPe6+e54RK2rtGMW9cIXG69wUYjYTpOl1GVYsDXvo9VYOC
      SiiayPxFixk5ewotb+1kw2M/Y4MgoBxyLbcOT0Ir1fHmz17iiNeHvbGBzshf+UnvbvLGXcOi
      sWMY1dDF4dW/5ZAIUVlB6qS5lGQn/NNHf12KT+gL5KfjVCWulHEUJUhAlKCvj7a6FuSUYeRZ
      FXjsnbQ0tWLzRVGZksnOycBqUCMGeqg520CPN4LGkk6qpo8+bRFDrRF6mmpp7vEQlEU0cclk
      ZWWQaBDwdLfR1NqJwxdCkPTEZeZTlGKiv/4Q7frRjEzTEva76GqtJxA3lLx46O9pp6mpA1dI
      RGdNJycrBbNOSbDrPFXOOEblJqIUw9jqT1HT5QOlFoNei0I0k1VoIdjdRnNrN56AjKiNIyMv
      hxTpHE//xzqkm+7n3mm5aKWBxaygt4uaY7VcFL6vMpOenUNWipGIo53GxlZsnghqazZFeSkY
      lAo8LRVUNLkvalmNOZGs/KEkX7CU4u44T2vQREZKEgb1+5NXORrB2VzJyRbPRWXo4lPJyi0g
      Ue2jt62J5nYbfsFAck4eWQkGlAoHtQfP0hG+YFRXaIhLzqUo10igt4Pm5k76/VEkfTwZOVkk
      m3VIX7ZPQMSc4T4GETp3/4lXukq4ceFEssyqL+XK6NVGTAAfGZlgfy9OhZE4nRop1vu/FMQE
      EOOq5kto1cWI8dG54legzs5OOjo6Pq+6xIjxuRMzgWJc1cRMoBhXNTEBxLiqiQkgxlXNJ3SF
      8NJ89BD9GTMZmfIZelNEfNjaWmh3aMkpycT4t8+I8RkTdvfQ0NaFbM6hKOWz2pE0it/eTPX5
      RjqdfmSFgfQRYxieqkeUI/j72zl38hzdAQlTcg4FBVkk6BQQDeF19NDS3Ei7nMzYIVmYB11B
      ZDlA15mjVLW6EbTxZBUOIy/V8LE79CfsvQ4Or/oVZ5ZN+mwFEOqn4fAO3j6Vwh3/CAGEPXQ1
      VFPfqyZ/zHCSvmyuj5ckjNfRwKnDbcRNmE2ao5qdW/cQGX77ZycAXxvHdu/gSE0vPjlKxGPH
      fcTGg/96A5nRHk5uf4W3jrrRGCSiitM0TV/Eomn5yG1nqKg8zbmKvbwTmMrPv3HjewLw1O1l
      9Uvb6NdaUBGh4nQ7i1csZnj8x+uPMRPoQuQIQa+TPoeb4Jcx/u8yRMJe+ntteIN/+9hPRNBP
      yFjEnFu/xr/+vx/yg29NJ7RlLWUdYdwdlezc1k7Ryof41+/ex/z8CHWH91NjjxAOhhDNGQzP
      T8ekky6IYnBz6o1nOZV4I9/6/g/45m0zMXfuZ8vxTj7uNm6f4fAdxdfXysl9u6lsdxIWjKQP
      H8/EccNIFVop21mDTxegr6uT7r4Q5uJruHF6LlpCdJ3dy87SWhwhH7bmbnzalIuLdjVyqKyc
      U/Xd+GUJU/YkrptfTLxSoHb3s5yzXEdx4CjH202MWTCNePtZykvLqbWH0KUVM3XKWPJT9Liq
      97G7/DztjgCC0kzRrKXMH/LBrdNVqFUGtLp+6g5X0tjtxBt20dnpQEwoYe41Y8mK0w7EU8ky
      IV8HFdu2cazFg6yOJ7dkItMn56F2NFNVfpgTNb2E9AlYlRaGzRtPYbKX8hdqSLl1GvkaBQF3
      HYff7KHwjkmYe5upPLCXqnYXEdFE5siJTBxTRLLczP5tzZjGpOA/c4xKxWjunjuEcGspG7ef
      whZWEJ81kqmzJpPzbpZA/LRVHuRMs51+T4A+uxMpu5gSk5Oa6iZ6A1oK5i5j4VADICFJcRgM
      cHES5iiettMcPHSU2k4vgrmAmQumU5igR+g7zeaN+2l0RVCakhk6aT6zh1zGQ1efy/T5+Yii
      iEgUt8uJW6VHJ4TxN5+lWjWWm0YmoJPCZOdnom+sorHdw7hR45lZAD17KlC1XFhgM0dLA0x4
      eCLJOiWRxHyG5RpYe6YO5/wM4j9Gr/0M3wBRwpEA/ogKS2IKVoWDkwcPUHa2k4CvjWPb93C4
      uhcMVhLkBt5+bgc1oTD+ln28tGonbQoriQlWTGrxQ27yYb+PACqM1iSSE6D2nRfZcc5DJBKl
      fu8q1rzxFjtOe9DGmYj21lNxaB+1XgNJSQY8tQfYc/Ak7c4gXncAhc5MUlIyCeGzrH1mB40X
      XchNx9njlJZW48BF04mD7Cs9i102EG/2ceadrRyp6yMw6EQpyxH6T23hpcM2zElJWI0a8Hvx
      +zo5uW87Ww82EtBbSVTbOL7tEKc7+gnRydF1B2kKhACZoLeBQ28cp2uw/YIRNfFJKcQLvRwr
      PcCR6m6CvlYOb93K2tfepNIGJoMG0V3F+tfK8RoTSbJocNUcYNO20/S/dzMBOs+Vse/waWxR
      I/FqG4ff2MbhFi86awLatl08+0YlTsJ4+qo5tKmUpg9kII/21bKvtIKGfgXxyYkoO8t4+Z0T
      9Pl8nHvnafZ2GUlKThpIg+u+QvpySUISRcSoj5aD63j6maMkrbiLqckyEY8Ld5xlMDGIhN5g
      RqEScfQ7r9DX+nHYLVjjB8whhUqNyWRB3W3DcYWzLlm1j3n8FRAQkQm7u6ipt+Hq66TObsI8
      wkEoF0BDYsEYZs8uxtIWZOebZ+mNRDFVbKVMMYlHV95EuqKbo7jYfPaDtVQSdXXSeLYNV8BB
      XXUF0bYQNw4DWYaQaGHM3GsZlaOju2IzpZt3Uq0rIjNOxt5Ujd+XybjxI8lWRXE011HX6yHU
      V0dNpYZObiLnsvckok/MZ9yshQwzZmHf+wKO/gDhKIMhtTKyr4eWxh6Kx41h9IhcMtMTUPWc
      orK+E9XQhay4YQwWZykNe8qIhq+05jjQfkF3J9X1dtx97VT3JZAypp9QBoAXTBOYOG8+w1MM
      yMce5dXtB8kdZyNOCGBv7STckcOi5SO5cJMYXUIeY2cuZKxCQ9XuA5iGTWDeqAwE/UlWre3A
      xaWjgwGczZUcPrCThmA8aVYt/vbTVJxJZcWSUQRtrdS32JkwZhzD87PJsF5q24oLCLRzYP2r
      bDvjI33ScpbNn0SKFKL1A4dFIhHkaASF4nK1ugRylGgkTFiSLnsvl+OzE0DASXvlfnaejTJq
      3jWkeWrYfrgdGXnQdlOh02tRKUUUKhVKBEDG02cnnJJNpkEBfgFR8cFQQT8N5ds52BAkd/Qs
      MuI9HOo4h3vwIEGhJKFgPGPy4pHwEAj4UOizmTRvCaMSBw7SJOSQr2tkx6qDdCaPZMq8JPQO
      HbWV4ctGxw6gQKPRoVErUagklILIhWayICgwj1zO91YeprblBJtO7MaQM4NrxyvxCErMSYnE
      axQIbhFREK4cT+tz0FJxgL01IqNmX0Oq6xwc7gX53fazUDCqhLwUAypRwNNnw5k6gcXXTx3M
      06XCGJ/xoby9KrUatUqJAhEBDXqjBoWoQK3Tghy94v0HPB5CcVmMHzqF0ZlGYBE36dLJNGhQ
      LPsxXy09T/OZnazbHSRx4kq+umzEpTPZRB1UvPkC6yqVzLp+OTPHFRKvUUA0goVfG44AACAA
      SURBVGSxYu1spzsIKaogHreDaEgiPu5KWX2SScnooKXVD5kawsEgDpeDaErixzJ/4LM0gcJB
      3L1d9CqzGTdtHEMy41HLV55JCoJAQloG4ukTnOwPEvK5cdj7uThyN4i9rQW/Kp3iiVMoybMg
      RQXedeAQBAH1YKglqDGaEzGYQnhlE8MnTmHy2KEkG9UIvh4aGoJYho5i6uSRZOmED1zn4yPL
      Mu4eO5bR17B4+fVcMz4J7/nDtPmNxIX9tNc30u4N4XE4cPkDF8RD2+npDRP126gvr6IFIOzH
      2duDQ5vD+GnjKMyIQyVfGIaoQaNRIA66YWsKi8jtqaVTM4wp06cxsaSQRG30Y08Cr0RcUgqm
      UAiPaCF/7BSmTCohxygRFVy0d6oonreQ5UuXMTtP4Oz+U3RdrqDWcjbucZJ3zQJmTSwkXqtA
      EABRiS57FMM1R9i9vwWnvYXzlTXYhHxyM7WXKw3IYOrcNA5ueocGp5fe1gqOVjkYUjyEj7sl
      26d6A5Q++hVWPCOgNMQz4fZ/5+aioaRsXs1Pv7mXYdnxOCPKv5HbSsAyYQU37/8N//v1vZgs
      CVjUWhQXiV9P0egx7Fi1iZ/9YDu540aikyMDDfghFMTnlDBjei2vvvkbvrU2isKQwMhrVrJy
      3nCmTt7Bc3/6MfteKWDyGDXaT73HgUygu4LnX3qCdkcQWWNl+JRljCgeQihQTeOaZ/jezhfJ
      yTXTZdeSD0AOo6Y7eerfv8bWhAJGzc0inhBo40gpzMey/QV+8u3djMgy0RfRknqZKysyl/DQ
      Hef40yMPsQ3QmLOYNH8Ft+R9tIycHwVV1kSWzGrjtU3P8P03HkNQxZE55Va+c/cY3NWv85cn
      a7AHoqiM6YxaMobUYDeVOzaw46yBOXfdwdikgXL6Wmpp7T5B6R/OceDPA+9+UVQw/4cv8ZXh
      xVy3cjrPPvf/ePBZNUlDprFk+XyKjJ2UvvgyazeV0+qx0emV+Gn5G6hzbuB/Hr6F/Jv+jRV/
      +C0/fnANkjGdcfPv5MZxcR97RP+EznBhvHY7zne/FQoiGmM8RmUId78TX0REpZIQEJE0WvQq
      GU9/AFGvRatWIoa92O0hdAkm1EIUv7MPpy8MCgmlQoEoqtHH6d4L8I6GfLhcbnwhGUmtQRnx
      IesSMGtE/M5u/EorFt2gluUooYAXt9tLIBwFUYFGZ8SgUxH1OXF6/ERQotFKhLxgTDa/vw+o
      HCHg9eIPK9CZVURcXkIo0ei1KMUQbrsbdEZ0aglRGHgDRANuHC4voYiMICrR6AwY9CoI+nC7
      B+vsOcGff3WcnAdWcv34bJSuPvo9IWRRicagBo+MNsGAGPLhdrrwR0TUKgkZBUqNFr0qgrs/
      iMKgQ6uSBh+yTNjnxOH0EZYZuLbeiEGvGrSDowQ9LvxRJRqdDhV++vsCKM0GtEoFBPrpdktY
      rTqEkA93fwi1xYxKDuDx+UGpx6hREA54cbs9BEJRZEFEqTViNqiJevvp9wSIyCAoVOiMJlR9
      Z3hn00ZqrTfwwA0jMQ0+kojf9V4bXYjWkoJZJRMJ+XD1u/BHBZRqPQaDDrUUwed04fYGLt5J
      RKEj3mpAKcgEnH30+8KgUKEzmNBrpc9LADE+Fr0HeOQ/Skm771aWjM/9cmZ8lL00Vhzk4JF+
      xt61lCL95bZ9+WIRE0CMq5rYSnCMq5orToJDoRCh0Ie2LY4R40vDFQXgdDrp6en5vOoSI8bn
      TmwOEOOqJjYHiHFVExNAjKuamABi/P0IO6g5XsG5ph58X9D4ik8oACdVbz3LU08+wbaa993D
      ol4bNfvX8oc/v8q2Y82XTGryz4q77gBr91TS7fy0HkRfAvqrWP+nnR9I6vRBwnSfPUjZsdN0
      ur+4W6t/QgG4Obf9NY6UH2H13obBpWoZX18XNWWbKC2vYH9VB/7PsKIfpGH7H3jxUPff8QoX
      420u5+2DZ7C5L/AHlSN4W8p49ZndvBevEbBxvvQd3tx8hNbPeARoLXuJNQdqcAX+wR3KdY53
      XjpA2xUOifY3cPhQLYGEPApzk66QXedCgvTUHGTzGxs53nKF+IIr4qS+fA+7tlXQ8RHa/1OZ
      QFnzrsVyuHzQpzuIy23H4UhjdPHHSTL6yeg8sYnd5/v/9oF/T2SZgO0s+7eeovfd/ynUxKVk
      kp2ZhP7jOqf/DWzn9rD/TDv+0Bf9w10UR+MpmgMq0vMKSdJ91G4mojEnk5mTTYL+k/ppeumq
      OUXliXrsH2EJ61N5g4rJk5iofYSK9jvJTvDSb2ulI24YebouqgaPCfacYsemd9h/qp2QPptZ
      y1cwb0QKup79PPHXrTT0ekCXwNBpy7lt8TCiLVWU7d9Cgz+RYPMZWgIWxi24kWsnD8WqAbBz
      8K9P8Fypkwbp13y3ykrCjHt4aFKQA5v3Ig+fg1yxl56Uycyfoub01i3srerAh4qM8UtZuWgs
      KV1b+dnrAl/5wXXkKGScXcd4Z3U1hffdTqH3DHs3vs7e8/1IicXMu34hU0ekXfL+g1Wv8NPH
      NnO+O8zj322mIHciN9w2E7mugVpfOmkjEzi/8w0O1zvoszvp6HagLp7JnLhODpWfoTtiZdyK
      B7ljrJWgs5PKna/xVmkTXnUaY+cuYuHMYqxKACeVr7/Ai9vrOBf4C/95cj3qCffwyF2jcDfs
      YfVL26lzyMTljGP+0sVMyja8N7J1V7zJW/Uapk+dztDUPrY/9hw7DPP4z7smoZZtlL74DO7Z
      P+KapC5O7FjDpoMteNTJjJ61gAXTR5JkL2fV7h4KhpnoKD9Ac9oyvjZi0KCXo/gcNex+bROu
      cXdz84TEQUc8J811bYRJIC0lHiXgqFjHM0ddJHtaqW6xE7ZMYuFsBZU7j9DiMzF0+nJuWZKP
      r7uehmon2aklWGp2s+5oC5LHSWdzM+0+E5NW3Mey0SlI59bw8LkS/vfmYeCzUX3iAAfc6Uzg
      KK9s2EGTX82ppv2MnLuSm+ZPJslZypo12zjZ2o9gGcay+77CtDTxU06CxSTGjRUpr+wh5PXQ
      396MYVjR+z7ZviZKd1fQJQ1l8W13snysgn3rdnLW5sYb0jJ01jLuuOcubpqXRff259lTD0G3
      jYZzZ+lVZDHthuVMS3dzpqqCZtu7BpWBork3M2eIlqTxS7n3rtu5aXwKQa+NmgNb2brjMD3p
      45k+Pg8DetJGTGPpbXdx181jCB3YzoHzPfitesKlb3OoJYocDuA4U8Yuu5a4YAsnD++jzjCV
      W+5cyewsF0fL9nPqAwko3kXKmsbK68aQZh7Jonvv5KbrJpOl8mFrbqSuoQcfYRyt1ZzvjJA5
      cSG3LMjFtvMAZ6QCrl1xO/MT6nl9YwX2gJOWyh1sa0pl4e13cdPUNDqr9rHnRNugf7+W7IkL
      mVmSTProuay4/R7unZVH2HuG9Y+voTdnEbetuI5iTT3bXnmTkxdk6jBpoe1MA3Xd/QRsNZTZ
      PHh2H6U2HCbsqqJ0RwidyUnjoY28fiTCqBtu46bJKbQf3MqWQ7W4vd2cr9rDSy+X4c+cwvwx
      6WikATe3kKeBrX96iqO6SUzKN73fmcJO7L0KNNok4i0Dkgj01nHirA1zyXxuvX0+cWdfZkdj
      KtOvX878EQrObd1DTX8Ej72Vxrp6bD4IOdo5d6Yel2kYc2+8lTkp7by5twpvIIxsr+Vw3WAA
      ZNiPo6uBsz0iWSUTmDaxhBFDp7Dk9nu5blIhCdHTvLGhCmnIHFbcdRfLCrt5/g/v0BzwftqI
      MAWpY0pwbjxJd0k6Xa0aRtxgpn/XYL26Gqk6to23q5wYDRqEgINO+0imfnUBQ7Vharetoqy6
      D1/ITVCwkO4GlKDQm0krGMHo0QnEdZVSVeMlGHrX7lVhzR1OToISfdIQRo8qBEL01kNEHUdK
      8QxumJ9HvFZJoLudlortvFNWTa/bha1Dw8Ibg0SNE1kw+SlWH2xm+VIz5yuOkTRpOUZ3C2/v
      WM/GRjOlRiVhTx99aXMZOdlzybBJ0ZxFcWEqRrWXwtGjGAbgafzQccbEbIpGjGZ4pIt1/m5S
      RgxnRG4iBZ1pPLrRgdPnorrsTbZt91NxUI8QdNMn5LIkfyZ+0jGgJC6jgOxkA8ZwHiNKRpFo
      kPCd3kBp30j+5aZpjNYJZGiDdGzazqmGxYyOHwhQ1+QUUBCqxtbtoMt5msjQJcyOvkxFU4Qc
      +zEq8yZxn+SksuEcyjH3s2jKMNTheNytGzh7pp4uC+BXkjNrDrNnjSFNr0RsE5DlUn77tTMk
      jbqT/1o2iUyT8n3vT78PtydEyKpCdWFKtbh0hg0fSVGynZNqB00Z4xk9OkqXqoljO2txB+FD
      gZWGRHKLhjO6JJnklg38pdJHNHoZE1BUY062kpWeRLucStHI0RSZIHBqG2Xl26jduR2DRkL2
      9tLhEukU5nxKAQgC6uwxDGncQnnfRFojw5lmEjg4+LMcDhE0j2DJA3O4YXL2oN+9CmOCwKFf
      PcKxpG/yPw8WEnZUsempF9+P8hIVSJISSVQgiOJlgl8+jFZvIDmvgHidAoFeqvbs4GRXCjd8
      516KU5p5/SevIyEjCwbGz53Eb/68n5prsjlxNIupd6UiOBpQJRWx9Ibvc8vowV2JJC0mkwH3
      h7OOfmQUCgmFKCJGBQRBQqWWEAUBSTmQ7FuORomo4hi18iv8cEn+gBkhKtEZjOiuUK4c8OFX
      mDAblIiASqNDI4UIBi+YJKtzGZLXx86udk5095I/I4MppkQere5nRNMhsibegynqJRQOo9Qb
      0UkiSBq0KgnBGRqIfzamkpeThlX/flYcQRjLvf8+jmO/3cyeprncPfKCnq5SoVGrUEVlojLv
      JwOUJFQKEUEYeKaSSoMk+hAkCYUsc0mfBIWEUjnQfgqFgo/cGS5qpwCBlJl8/aGFjMuMGzTT
      tFhUhk+/DiCph1Ccf5xDb5/DNXQ4lgvqp0xOIVOwUX+qHrtsIslqItLdiS3oxN7TjzGlgLQU
      M7K9mY6PGc6v0xnobmjAEZYJD+a6EoSBRhqoQhCfO4CgtpKaloTk6KHX5xuM6RXQTpzLzK59
      7Nt8iKMj5jE9UcJoTMCqETldcZI+TQKJFhUeZx9u12W+Zwkg6tQoQ800twSJRiNEPsH3bpVG
      S0ZqKrbyg5wNGEhIMCH63TgcrotikNUaHX1tbdj9IULhMIq8EoY53+GtPV0Efd00njrI2c5M
      8nIuGEcFLYVD82jvOkTZWQuFSQYSx5TgKn+V/QdTmTY5CbVOT1piEm17d3LcHqT//BmO13cT
      zUwnyQCIChSi8IG+pyVl+CLuX5nJrj+upvLCjzZKHQajD5+rlytu7vBpkGUiXR10BYL0tpyl
      vLJx8AcJpSqM291Dn8NLOBJFlZNPgeMUpSdtKIwJJMfr8TU10BUKfVIBCCg1ejSSgKRUM2zi
      VFqq2ikemYYgKFCq1KhVCgTjcK5bsZji4E7+6+4lzFl8Kz99uQKbN4Fr71iO/YV7WHTTN/nz
      0TAJqTpUChAUEiq1BtWgnSlKKtRqJYoPpCQatewbjKt/nGXXLeGBF84iihIqjQble19eUiiZ
      XIKy/TV+cM+9/HzzeUIKHTppYNsVQTGORcsCrF9zjKnzpmIUBNTJBcxadgslvev515vnsWDp
      g/xuw3E6AiAq1OjUSsQLe4GgQJcxj8Uze3j6K0u59/tPcdQ5EPSvVkmICChUg0HpgzGwGp0a
      abAMQVKj1ygRdfEUzb+DlUWNPPXgUq5ZeCvfeexNTvWGLtrlYOi8lUx2b+ahFdex5HcHURon
      8/X/vIGWp7/CdYvv5jd7BGZ97T5mpF74WAXMhcPJb6nmVFwiiVotyvTRTG7byvbEOUxMERB1
      iQybdzs3ZR3l/267jpt/+AruoQu4eeFoLAoJjUaFUnHBdjWiEq1eg6TUkznrPu4bU8Nf/riD
      rndfPEIiuQWJiMpeunrcyIP3qlUrB98gAkqtAbU08LcoKlHrNEjCwPNWqVVI4sCGBxq16r10
      VKKkRq+WEAQQS2ZzTfsz3Hb9Sn6yqgJNVh4apQJIYMi4iaQLZfziKzfwgz9tp06cyn3fXoCx
      /DHuvv4aZl9/J4/s6gU5FHOGi/H3Idp9jBdfKiU8dDY3XTsSy+XyOv+DiblCxPi7ICaNZMbo
      OEId56ht9XDFLZH+gcQEEOPvhIq8afMpjlPj7u3G+wX1BYqZQDGuaq74GdTn8+H1flKfjBgx
      vvhcUQDBYBC32/151SVGjM+dmAkU46omNgmOcVUTE0CMq5qYAGJ8fvgb2friRqp6fVzOn+3z
      RvHwww8//PFPs3Hg6V/w+Msb6UqazajUgbl01NVBxeY/86sXD9AjJ5Cfl4DqI5QW8Tk4tXMV
      axusTMz/G4kWPg7dJ9mw+TCtUSPpycbPMhvIR8Jdd4A1e6vwqxNJt1xpu+8L6G+kbPcuStsl
      cnOsH2i/et7+9Ws0JBaSbdHwBV1cvQx+zm78K3u9uYwfmYNZrfh4fm0RL61HN7Hq2Rd4bcMm
      dh1rQ50zlGyzEjnkpu3EZv7y1F9Zt+M47UEdqRnJGJQC0VA/zVVlbF6zmm2dFoZmWdEqRWQ5
      iq+n4pO+AQJ0nD6CPxjkrQPn3wuJ9DjsdJyrxOXzUN3q4KPuKRcNB7A1n6aq1Qn+LirfeZGn
      /7KFatcnq917+Gw01DXQYvPwjwgiDDs7qK5vpNv5MbLPBVx0NtVT09Z/ib3+XTRVnKalP3jB
      CBqkr20nf/2PX7K1/jOp9t+FSEsp68oUDJ8ynGSDRLRyFd/6zmrOfNQCGvby8v5O4scv5va7
      72BeQjWrHtlEvRzE3lrOptcOIIxcwrIZWdgqdrClrA4PTs5s38T2w63Yuk5R3dZDYHBJOhrp
      Zdczj366QTFhznyMG45Q9+1RFBHA6e7B1pdLcZEe+98+/dKoLBRMXkByUIn5Sr7AMQaRMCaM
      Y8n9Q1B9MD3MF4YIzRX78OTPYGSyBZUoQOEivvcdLpv/4IOEEsdy2+0TMFviMKpF/OoTrF5X
      SUPvtWSeruCEMJrvLJlGodhBtGcdx06dpGncUvKmLCB5goK6N0qpvWA1Wo7UUlUmfToBCKYJ
      TEj9CccbvkZRmgdnbwvtqcMYomx+TwCB9iOsXbWaTYcaCJiGsPQb3+bmCVkYBBtlf/klj245
      h1/QoDNoMc8FAj2c3rmDclsWSx+cg7ZyI6tfXsvec31ElFbG3PpdHlpSTLzuJI/fvIro0hzq
      Nx+gORLPuMUP8i/3jMd6YSUDds5ue5afvtZIQ6fIuHt+zLcWDMOijdLw9q/5+aojdIZ05E5e
      xoMPLGeEXMe2A0doNs3g/tnZ0LSb3+93M2nSNKbmhSh97gn+8s5JevwSCSUrefgXN5Pu7qZ8
      /e956o3TONUZTF58O3ffOmMgMs7VysHXfsf2R+tpcCVzw/d/yG0TM9FLHsqfeZjfbz2HV0yi
      ZOGd3H/7XLI+0Mb+zgo2vbyaN0tr8Oj1hFtEFl7cNXB0HmbdI2cZ9R/fZWjjXjZveZNajxV3
      9XEaAinMu/tBVswpIVFuZNsLT7N62xnsUQ3F9/yKX1yfQseJ13n8yQ2cs4ukjLqGlfeuZGae
      k9Ln1nPgTCvd3l5aOlykz1rGVM6ypayK3kgmt/3Pr7l9uAafrY7tf/ktq8o6ECzDuGbF3axY
      MIK49+yLVk6WO0memIZROxA4Ezn9Gj/ekM1jv7gWV90uXv75boIlemoPnMRhLGbJXXdz05yC
      93JFS6YkMkyAICDgpv7gcTqzp5CtCtDW2QqFsynUSUiyhcRENdHOLmwOmeE5CeiADpWIcMGG
      HoJYQMlY96cNiIlj3t0z+a8XtjL1/iyqy13Mvmk2th3NA4+mfg9/evopXtnbQCgShfYu/vT/
      wLz6HoJP/JS6Bc/x7GoVYXcvh17/HRsA5Ah+twun00eYKJJWjRQJ4ejuwhnqpPPR1Yya9O8s
      zg7g7HGRN/0bPHDjXbRVb2ftH3dyavF4Zl0Yk6+2UDR1PjdNzUF96hW+ueYQ1ZMziVv/A/7P
      8yBPPfsQMn66anez4SePYX9oAT6vG6dq0AAJ++l3ewaSbXQeY+OeswQSR7No5izmXDuJNK+D
      0qe/wU/Xtw4kkaCTN14KgdrA7YWAIY0J193AtSOsdO74HT/eV8GiYUaOPHkXu8c8yzOrdBBy
      0njobf7yn93c8W8j3q970x6eXnOa+An38fsHstAIp/nrV1/80LwqEvLR39uPPwLRoA9PWE3R
      vPu46bvfoXbLY6xvPEVbu5sNv9tH3P0P8vs7ElELoJAU9B59kZ+vMfKtJ54nQx4IvN+y8ffY
      Z9+I0eVHlzeHB26ZSWb9azz0mpuUb36Lx+4z0Lr2O3xv80luTE1i7X9/laeP+AmGZWjv5PkX
      ooi6b/G1WdkDFextoroziawsAxr1gOEv+510271EkBFCPvwhI+OW/xvfuq+D8tff5sTRk7SM
      K2D4YLYgQRCItO/jd//9B85m3cvD3/oNr9+hQhWy8//ZO+sAu6pzbz/H3W3c3eLuIYoEh4Si
      xUoLvUhpe+sC1GlLb0u5UCjBIRAjCcTdMzNJZibj7nrmuO/vjwkQIAQuobR8mefPmX3WXmvv
      9a695P29b2ssikh+ejQXiU6nkYqee6EdGaanP3b+ijBl+kQKW19hb/d0esXFzNeJ2f3e/4Uo
      EcsU7njsFyyfl4NaBEIsBuIe3gr5CQoy1BoN0ZgH+dlWdL4atry5H1fmrTz1k/lkeLbx0weP
      IT6jYWKpErVWQKOSI4pEiH3M6UqERKZAqdGiUckRogFiggDREP4QyNUapCIRMlGUYCg8kjRO
      YCQ5nRAjFo0inH6SQtwifvbnXKoOH2TLzud44Lm1fOt/f4peaaTojp/wp1vHoBCPZI4BGD5e
      DyIxUrkStUaLWiEhGo2OlB0JEoxJUGk0iEMhJEKYYPgjKxUhRjgcISaSodJoUAsf+MZ/yotB
      KlOg1mhRKUaS0QlCjEgoQFiQolRrUItBiARxC1HCwQgShRqNBNwSiITD7wt7xBI5SpUGrUoO
      QhixXIFaq0UjFxEKRxEEAbkxnst+/hceXmhHInqv/WfUU6fDKBMjHmk6Z82cIRIjlavQaNUo
      ZWKEaPRDCfxirlKeevRJmsY9yB9umYRJJR0pRiQnwZ5A+HAtTZEiUnHjHAwhljgwGWRnudEI
      0c5DHGiccP7boBJpJkVFdRxZV024KO/9TxaALD6ZbOUgVbt3c+BkM10dLVTuL6fJqydnXDIV
      O9dT3dZFe1sjLT1nEZ7HQCxRIZOG8Q21UXW8mg6P/wtZ0KZPmod6z+usrminvb6OI5sP0Zc/
      kVybBGnQi7O9mbrmOo6WVdDROyJrcjcc5kiTH0PxPG6+9w7mW1voHFCQnlOAf/cbvHm0gY7O
      VuqqTlHb1HuOuEgqxsycRe3bK9lf105TbQV7DlUgnVLyYe2xLZ4MiZPOikqqGttorWmmMxD6
      fO1XZDF+opPtq9/leE0rXe2NnGgdRJVeREF4N+veOUV703FKj5TTE84lO9Xw6WUiQqE0kZWR
      TOWGl9he3UFXRxMVVado7DhD4qcwY7d0097hIRj6fPuffQffZXe4hEunWfEP99PT3U1PzyA+
      qQZL4RgKXHvZtO0UtUcPc7BmCFlWAamGIJ6hkWsH3CGCHid9PT10O/2ILBnk2E5+3i+AFENC
      Gg6NGKlMTPaURQivDzI+3wYSDzqzFYdEhUSdxbwrL8W3ajWv/n4HbpSkFC3j1sJ8Cq97mKt+
      80ce+94GNPHFZCcmkWhSgliGxmTBhg6ZNpNJczKof+1NHj+6i3GTU0lOScAkkyBCjT0jCaNs
      5EVIFXrsyXY+FE5GpsVqs6LTyEcsXWkiKT6IWipBUvA1fnHHEzz+x/9mdURF6sRL+MYtc3Fo
      XWSl2Tj44gs8Wp7K7HEOktOS0CgkKMQRqjf/g2cru/GjJGXyvdw0ToXVt5w7Op/l1b/9hLcj
      csxZ07js6iuYrDTgsEbRKUcqJdXZSbHrkUrEWBY8xE86fs3fHnkYn9hK4UUruOeKYhT+OvRm
      K3atCrEml/mXT6f/1TX85WersYwpQG+xY1ZJz9hC/KDtWilIlTostjh0qhEtmUJnw2ExopQZ
      GXfLQ/hffZYXfv3fDEWV5K/4KT9ZMpHr7+nmqX/8jv9+RYyjaC5XrricErOHQ1YbFrkGmRhQ
      GkmKV6CRjUhOZcZEMgJqJCoD+RffzrUDz/Lqrx4igJ6kcQu56upkst5/EUmUTNJzoKMTtz8L
      s1KOSGMjPdGAFDFihQHb6fqDFLXRgtVnQHHG8DwciBEnnGDlY+WsPN1upbaQm371Yy5Knc6V
      K/p4ZuVveCRqZ8Liq7hyQREGTxWrnnuZjYcaGBleX+fRQ6/DtG/x4r3TuetHN436Ao3y5RBt
      28ZjT5Qx9vabWJRjR/GZpnL/ekZPgkf5UpAkz+Ca6VGqDlTR44mcPQLEv4FRAxjlS0JJ/tLr
      GSv1MByKnDND/ZfJ6BRolAuacy6CPR4Pbvf5+iOMMsp/LqNToFEuaEanQKNc0Ix+AUa5oBk1
      gFEuaEYNYJQLms/pCtHL5l/9mJUnnIQFETKNnXELb+Gmaydg/4LTAn2hRL3Ubn+JF1bvpWEQ
      DHnz+OYDt1GscNKw9e/84IWy9y815M3luhtuZEGu7hwFfsWofouHV8e49Z6LyTeqR0c/PrcB
      RBjubCb5mif59nQF7u5y1jz7V57U/oSfXpr2hVbwiyNK+7Yn+e0rfUy/7WHuzDIS7ukkFIVw
      KEBrVze6Wd8YSbkDiGUqtDrNp5T5FSMwRGtnDH/kPzRO4b+B83KHVhodxMWpcRgULJl+mD8c
      r6Xv0jRsX1TtvkiidezaWEPqom9y6YRCbGoROBKIiSA0FKK/twdjViJxcXH/7pqO8iXyherE
      RSIQgv2c3PkGzzy9mpNDUhKmXsldt17D9KxuXvn2P3EvXID5xGpebp3Im5kFRAAAIABJREFU
      H/58De5Xfswjr5YzFFGSPHYxtz30ALPUjexas5Ln3txPd1BL7qIbufOGxRQneHnnp/ezSzMN
      Sc1ujjX1Ic+8nkf+eA9FdHF0zRP84YXD9MeUpE67kq/f9jVmZ5zWVXY0UjWUSG62DrHgw+sd
      ifmvVIqIRr34vBH0KikejweRWIJMJkcmfU+4HaVj8+P88F0ld973NaakmhH3r+HbNx7jmlU/
      Yczgfl767ROsrRpCljiWy268m5sW5hA4sZ7nn3+ezRWDhMUGCq+8n++umE6SsZzfzH8S2+Pf
      RvLC42xXX8uP705k319+w8tH+oipkplx9S3ctvwi0t6ThQodvPP4H3lhexmdXlDYJnLfHx9h
      scnFgRe+x29r0pkVKmNrtQfHpMu565u3MTMxQvP+tTy38k0ONrjR6aV0qc/UkwkI0QDdlRv4
      n988y+GuCLrMaVx9861cXuRlw5Nv05U6i2uvnU6itJv1P/8hFRN/wLcuSqB942P87Om99EV1
      pE6+hvsf/ho57uO8sXYtzcpCcgZ2Uiqdww03LmfcWcaUaNOL3Pq1XSQtCVO+uw1Z0kSuuftB
      lk+xEeksZe2Lz/LqtlN4lSlcdPO93LJ0PKJdP+fuY2P43Ywu/vDEegp+uIm7MuvY8o8/8dyW
      U7jlGcy+5g6+cWMuvVte57mV6zneG8Ey/hru/+a1TEoPsP47d7E3/jLkJ9ZztM1/fgYQcPbQ
      3a3A3XOcLQc7yL8km1DVYfYe6GP6d//Ow/YB9r66mgO7DhPvSAG8nHhrLblf+y9WfjcLXWQX
      P3tJwg3/eJNFJgh4nARlQ1Qe2MLeGgO3/PFN5pgbee3PK3l7mw3TlTkAhDTF3Pf7u/mlsoon
      vv4wu07dSZKlhtLSMFf+9g0uSRfweIJIlWd4HHrdONWDHF35WzZ39+AMiDFnL+M7P7mBDIIE
      nT4OPXUfK56RonYUMPfS67l6cTF2pQSQkDh1DhPXvEF50yDFiQa8u3bSvHA5U+hjx8v/oHfO
      z3juhxq6Sjezef/rbE99gNlxJSy751dco9Uh6djC7/+4m8Pzc7EZAdwcfH4Vs2/+M/8oFNG0
      +1UquJTfvXE5aYIPT1CE6kyHybCMzCV38surNagUAtUrH+CRl46y+N4cEMTobCWs+OZD3N69
      nxfW7qC8pouJngpe2ViD7Yqf8erCfDRlz3DTyjNm/oKAb6ia9U+/hWb5X3lroYHmHS/zxsZX
      2WG9nbwcCQ0dLXT1TiSOMg73jWF2oQlR1dP8eGsyP37mFSzBXg6t/l/+/nIuj14mA08Lx08p
      yb/8Pn4wPw/TJ2tSkCh0TLvjUX7+sIsTm17kzTfepDx1CcM7D9GuWcQvnv4BuvZtPPn6Tg5l
      xTEGoG0T/9ixmIdeXEeWzE3pyj/yWvcMfrnqz+RLQ3j8AfpKt7Gr2sPU+57goVQ/B1f+lbd3
      5JFszhh5lLqxPPy3W9H7D56fARz75/e5/w0xMkMikxf/F7fP1dOxs46jO/bSX1nJW6efdc7i
      +YyEOIgSv+AObpyRjVEuJibJIK+oh41//Rt9xcUUFI2lIHGA/oEo8vRJjMnWI2csUyasp7a9
      g2H3iMTOmpKOXatAJDZg1IAbCUptHBbzINteepLBkiLGFpWQnyPlfQGSWoteZKPg+hUsm5KB
      xtfACz+4h9++OZ0Xvz6Wu/62gbsQiAb7OfHuy7ywczXb4hNZMfn0hE4/hkXz1/GnYzUMFYvZ
      v6+fZbeNIRYu48T+Bg4deoSaN0cu1WVNY2zEi7+nkq1vbuJAwyDBkIu+rmymCpx2BAuTcfX3
      uGmcHmI+tA47+r53eOnvTkqKxlJckk+29AP5VDTopWnfG6w7dIp+b4SQs5vIrNPSGKkclT2Z
      ZKMS76AStVpJEOjuaEGIT2R8fiZmuQwUckTiM+f/UULDjXT0jGfJgnR0SkjPHUdC3U5aO7zM
      L8yD+hbaujoxdJXhLBhPlkFD1+4y+poG+dV3TmdDlJvImhnFjwzEdoqmLWTxwgIMn7LKFovt
      xCWokCMmMTeX5KM7aTk1gK/hCO8c3MKRva+cbn0BUyUQA5BP4qYHLyVHKyfk7aOltYtJV11D
      sUEOyDFqIrTs66B6xxY27zvKm6d7eNxFMUTCSNutaVnY1DLCEcP5GcCM+5/jpxedsVCMOumR
      GcmcuIQb/utu5iSrEUcCBKMSpLIGDqInzq5HJh15MqKYlSU/+jVjmyoo3b2f157cTN5VdzBO
      JkLwD+P2RbDK/Ay7I4ilCqTnCISjMqew4Ou/oKD1OGV797DyUClTrr2dm+ekIgOwpZCnPozL
      6yccFRBrkijJdbDO6yXidzLkk6I3qpHLDCQmpxPv8BEInaGiRkHO7IUk7j/CyfJm9kaX8d0C
      GSK3CnNiGkuXP87dM+0oxRFCoQhCsJl3nyljyHExP/rORSQPbeWxH5bxwYBoITlJ837ZtvS5
      fP1nebQeL2Pv7pc5VD6G62+7g5kpI7/wHN/Iy9U6bvr+n5iVqqF+5T3c03Pu9yOTyxHCIfyB
      INGYkkgohBD7cPokkVSFQu5iaNBPJF5KwOsmGBKhVcjRpOaSK6qkp+kYPZUeimZmYNQqcWu0
      6MZdxuM/vpwEtYRYJEQoJBAZqASNBq3Z9KmdfwSBWEwgFgvhHXbhE/Ro9TKillzmL5/F7ddN
      xaEUEfYFiSnkDLYB8fHEy0ampiKRFKVSgauvB08kBbUoRjQqIJZrSJ16KVdceytzsnRIYkH8
      YRFK+cDHavDFxoqSaLEkZ2DTlbF79TqiY5NQRDyILXnkZ5+l+Z5adu/owuDQk1gwlrzgESJS
      NckZcehqytm6QUGetocjtRJSpudgMyhoOuuNI/hcjZTvayNm15GSnU92dBCiESIw0unUucy9
      2MHT+3exM9KHVeXkSL2Bi1ek4OupYMe+fgyJZlSCh9aqE7iFOKYmfCRIl308i7NX8/wrw2iu
      /CVJYgmCMo3CiVZe2PQyG8PjscmjRKQ6EuO1aHQaGGrnVPlhugZr6fEGzy5nDAdwNpZzoD2G
      XZ9Edn4OURdEo+H3ao9Ia8Ci7KCz8jhHuqW0tDhBee7XYUnJwXxwH+X7tyHqi0fe0o4/lPjB
      BSIJSlMeY8a/y4FVG5GXaOivO45fnMS0DDuoo5QUyFl1bCdV/eO4M92CRgH6CQvIW/8uz6/T
      MiNJhRCJIdGmkHu2sCxhJy11rQT1KaTEGVGe0eOi4U6q9u8n4O+nsbyOUNocigvi6OnQUXlg
      F+s3+sm1ywm5xMRPLEb7oYJFSOV68iZMZeuW11inmUKSTIbakog1IxNd2Wb2v7ueSEcyKsFP
      yJDD5PyPd/fPGRkugqdvAFX2DPLtZxYqRqUzY7UoGWg4QUVlPa3OGObkTNLiNYQHgxhyckmz
      a0dkdgRoO7qPA+Unaeh0YcieydI5k8hIsKNXeKgtO0ZVa4C4yYtYPKOAOC14BwaRp4wnN16D
      VBTG1TuEsXAW6Wo3HRWHOVB2koaeILb8qcydVoRD9d7BhARjahYOXyulpWVUNjuJm3M7N85N
      RC6VEOqs4MiRcirrOwka8pm3dAlTMo0fib4mQ+U5yUsH1Vxz0wKyDHIkUjnW5FTkA7UcP1FF
      fVs/UW0cGblFpFpjDLZVUdUwhMyWgE2XQN7EHBJ0MNweJmHaBFI0IiBGwNVFxeH9lJ2soydk
      pnDaPKYWxPNe9RUmM5rBZk5UVNMZNJKdZUdmL2Z2romAx0nUnM+EdCOxsB9vWIQpPpO87FRs
      8gAd1SepqO9DarajtWUyeVw6RoUUESKkMi1xaXG4Tx3gWGUbPl0us5cuZkKaFglS9Goxnd1O
      FHmTmFechlEpQWxKpcAepO5YKRW1jXQNgyk9n2ybjGAohi4ui9z4ke4a7trL88+up02RQW6q
      DdXp7iI4j/PWqjJ8CjftTX3IU6dx2ZVzydDrsNgsqKO91Jys4FRDO26JncycVIy4GZanMiU3
      HoVUjEgiRZeUTZKojdJDpdR0eJBaUikel0uyTsZgcxUVVXW0DAQxpeaREa8lPDiEMmsKeXY5
      CMFRZ7jPjL+DYwfKOHn0EHXxl/CdaydiVErPGuBglNMIPho2r2JTr425i2ZT4NC8f/gWbXqR
      O+9o5xvbvs/kf2MVv+xwmV9dogFcA4OE42dx08Vj0CtGO/+nIkTBWsyCnARSbZoPnTyLDIVc
      vCLpM0eG+1cx+gUY5YJm1B1klAuac06BnE4ng4OfO8ztKKP8x3POKVAgECAQ+OT4ZqOM8lVn
      dA0wygXN6BpglAuaUQMY5YJm1ABGuaD5nAdhnbxx3208UR5ALBEh1diZsPgu7rlrHunK/2RN
      5PnSw/of3kf51D/w4JJkNOdw9f1kOnjj23fztxPu0wkclNjTrubHz99FyRdb2f9/iQTxhESo
      1fLzHsHP6yR4wc828pP5SlydR3jpt0/wxFtJ/P6GPP5/NoHzJtpJS3MyN//1d9xSoOU/JEjy
      V4sjT3DJ0w5efPZmks+zqPN2hRCJJOjNucydmcfB6mYGhGz0HicDA078ERFyrRGL2YBaHsbZ
      OURMp0PqczIYUpGQaEIY7qZ70EdEECFT6bHYbWjEIbyuIQaHPIQEMSq9BYtJi0Iaw93TiVek
      hoAbXyiKWGkmPsGMggh+Vz+9Ax4ighi5xoDZbEL7fpD5AEMdHiQWA1qlDDE+ehs9aDNsyENu
      BjqGETRSgh4fEbESvcmC2aBEHA3iHhpgyOUjLDgZ8IXfT70TCzrp7hrAFwGpQoPJbsegiOEf
      HsYTAJlCwOuJoDaZMGgUI6NVXw8dUTUpurP3fCEaxOMcxhtTYLQYUIpj+AZ78aDBoNcijTjp
      6RnCF44hlmuxxTnQyWKE/C76e4dG9L4SJXqzGZNeDf5Ber2gU4B3eBh0Cdi0MZzd3QwFoiCW
      ojbYcVjUZx+4Ij76e12ECRMMhYhEJWgscTgMCkQIhD39dPW6CCNGoTFisZpQC34Gh33EJFLE
      YS8+NFhMOmRhF319TrzhKCKZDkeiHTV+hnp6cPqjiGQqDGYbJp2E4PAgbn+YSDRGKBAgKtFi
      jbOgDPbT0T1MLCChpb6BiMxAXKqVz5iE9mOctwEIgkAk7MU57EWhUSG4OjmxYx3rt5+g2y+g
      TBjLJVdczuxiF2//6ll6J07C2l/BEc94vvvwVOqf/R2v1riICVJsGZO49JZbGSNUsX3dGraU
      dRCMSdBnTWPZlZcwOSvKnr9+jx3aeThcNTR0deEUirn3t99joqSNg288xWsHB4hKZdgLZnP5
      FcuY8r6msJF1j27G8q1rmV+YiJrj/O/Xt3HRzu+S3bWDv927DuklhfgqKmn36RizcDk3XT8B
      RetR3l69gUPVvYRkSgLtgyTOAQQPzbtW8dymo3S5oygNyUy67Gaunq2hZvubbN47hLXERGeL
      iCmXX8rcMYkj3stuF0NRAWfrSY4PqlFojDgSE7GoR7qfEOjh2LpX2dGdyBXfWM44/RCHX32S
      o8b5XLe4mEDZWl7ZeJR2VwCpOp4p132L5VP1DNbt4Pl/bqPZFSQk0ZM3aynXLpuH4dRafrdt
      iAnJOrqrT6Je8F2uSz7J//7Papq9MQSFiawZy/nGDRM4a06Y4eO8+pt1dOoFgr5hBgd8mMff
      wgN3zCFO6ObouhdYtacRV1SEMWUcC666jvnGOla/tp02iY0k2ujUz+KGBbm4StewamsVPf4Q
      cuMEbv3v20nt2sLrL2+nqtdLTGOneOYyrrkkn97tz7P+cC9RtRF3Vw2tQxYuu/9BZnvX8sTq
      MoLtYp76VS12x0Xc/di15HzO/nteBtBXfYC9cjn+4WbK6kVMvTydQO0Rdu1qwDb7WhaYhinf
      vINDh9LISE8HfDQdrcS24uv8alIK6sg+nnvXx4SfP8TiZB1ysYBYPkjN/oOUd8Vx/Y8eZoqh
      g/V/f5pdB5JIihuJ2ICxiOvuvpVEeTV/vf1BjjV+h3xbG9VVLkpWPMjF+TqkYilqzWefjInk
      OtJn3sI1Xw9RvvYNdlTX0+VMom/jdurFY7njl5dSbB1g9Y8epFICuI/x7BN7MNx5G4v0QTpO
      7Gbvqo0UTrwWESEGWluRTpnGim9NI8ui+GCuKjGTM0lG1apXqYyJEUtlZMy7mRsvLsQkAbEm
      jpziTMq76qir7Sc/vY6qfgeZ41Mwevfz6Os1JF10KXMT1DhLX+efT21k+tSv4TBnMGOZjZnS
      CD2VuzlUd4TKtilMBxis47hoHjd84+cUJhnpW/07Dqvm8PNvzcSqVxALCZ/SEWQkTLmK6xYV
      oe7ZzG/vf5mti6ZyZWA9T7/tYv6tXyNZ6OXk/sNs33iEkhuMEOynvlvO+Btu4tpxGUgr/8mf
      N/cz49YfsWy8A7FrAJfQy76XV1LnuJXlS9QM1h3i8OEN7M9LH8kuo0lm+jW3MCdjiE2P/oQT
      zU6WXvYt/qTyMedpB4/94988Beoq38q7XVIkGhsFi+/k4okaWnd00FzbiSDfSa8MkBlJTrSh
      EgOISJhxJRePS0EnExOTZDJ5kYld29bztsWGPSWXsQVWnMNRZIkl5KRokJFDUZ6esvZePN6R
      pDvGuATMKjkisRadakQSqdInk1VgYffBdaxrtJOYWsC4CXrMnD0n24cRIVfosDssKJV9yJVK
      FADefrr61CROzCYxTo0YN3KJaKS8rnoqXV7iD21lWAwgJ7MkCU0MfIgwZI5h+owZ5Fg+slLO
      WMIPfjkiTI8Fh6l693H+sHI1Y2YXMtswUo4js4gMaxst9ZVUulrxJCWQmmRH1r6RZncPnqO7
      6FZIEWFhUnEcorCftqp9bN3RRkwqxT/QyoA2ZyQZIIAqmzmXzKQw2YRcBNaCuYwvLWP9Gie2
      eBOp2dOYnsQ59gS1GE1qFHIp2uQxFMU9QU1HDN9wDXUuJ9Y9W6gBwEZuugkxAoiM5E+bydQJ
      WRik0NLWQqxgKjMyraglUjDZEVxHqK8apN91gK19IzfXpedjV49IF9UGE2aDHrk8iEopRfIv
      WFyelwGULP/xhyWRMTdylZnEnCIKb7mHJXkmJEE3nrAUpaoV0GAxa5BKTksiQzIKrvsm2e5O
      ao8dZs+7L9Iq3M4MlYhoVxe9g0EsKied3QEkch0K+Sc9AQGp1kDhRXeS6muj4ehetm5pYUBm
      47aLMs5IKxrAF4ggRAIMdXYy+Gln4DIlGmWIgaFhvL4wRrEXXyg6kt1EbyVeG8/Mrz3A1flm
      pJEAPp8fkTJKDXI0ai3as2wTOVtrGVbZiTMbkEvkaG02dKJBYmdIxSSmFIpzHLSfPMqGRgW5
      k0tIsmmQuk2YdOnMXXE7y8YkIBdCuAbchD1D7Dh2gGDJd/nxVVl07nuFNw53fVCgwYBBqUB+
      eiQImMdz190ldLbVcfLQJlZtH8BafB8TPzEMUmwk+6YQw9dZS4M7jnibGLnMQYIjhSu/eTdT
      45VE/X58oSgK7ylQatFqNe8LYLQmM6LDzTT0e3AYZYgCHoIxA/YkK3kX3cp/XZKFXhzG5w8Q
      k0RpOnGO9yKVIvMN4wrGEGQgiMWfezfoi9UDiNXY0/LITD7Jwdf/SU+KBblEhC13GpOLP365
      EGjjwKZSfHIJsQBoLHaMZhvp+mwSGw7y9gsrOaJw095joXBBPg69jPqz3jhGwNVK2fZSuqUC
      IjfoLRb0GvkZmUgMOJI87H33LdyV8ZgsvfjOmUgWUMVTOM5G/cG9rHqukTiHlOY+PxEBcExk
      2aytbHjpedxZZhRiKQZHJuNnZ52zSF9vNfur9hCMiREiYQbbW7AtupycDwWgU5GYl4m+7CCH
      BnOZlZCMWQHS1ElcknOCnWteY7DMhEIqQaXNZcqCZGxxdnwV23lLVE2stx1n8JOHy6H6veyq
      DhIRC4RkRuxxZtRRH711JzjZGCNj6nTSP7Qg6Kdq1wb8jQai3Q0MF1zJ1RkytP65LLC+wOrn
      /smpRDUSkYb4zGImpX/8nqb8ecw+upbd616j1qxAJrEz6dJ5jJ9fQtmeF3m+Lw2DXIzCkkrR
      +IJzv5ekQqYo1vDmsy9QEVfE3CsncDY15mfhc0oiQSLVEpddRIrxzAc9shNgj7OhiAUIhkGi
      sZCUlkaiVYdKric+O514kwqpGBCLCA324fSHEMn1pJXMYPb4XOLtNiwWFWGvh7DUTM6U2Uwv
      SceskiCWqLGl55NiUSIRi5DIdSTkFJGoEQi5hxjyhUBlJXvMZKaUpGN6fxdIhd4iJxYKERXr
      SCgaQ1F8IuklKehFUpRaO6n5qZjkIkRiJQZHAkmpKSTFW9HIYwQDEaTGBDKzssgpLCbNYiMl
      JwlVxIs/HEOi0GFLyiA9yYxapsRgTyQ55SNZKwGFRkXU48LlDRAVybHlz+TixVNIVn94DBPh
      puloPUFLHlNnleBQiUFmIjnNjioaxBeKIpKpcaTlkZ1mxWayIg36iSpMJKRlkZObRWZKChat
      HKUxgayUOAyqkS+SBD9D/W68YQGFIY0JC+ZRbHBxctdqtjRoKRmfh+U9vbG/ncO7avDo9Zh0
      KjS2IhYsm0eeWYFU6SAtzYjI7ycYEyHXmklKzyDRqkOhNpGYnESiWYMEEKltpKdZEPk8+EIx
      ZLoEcgoySU3NwK6I4A+EEaQqTPHJpKXEY1Qp0TtSSE6wo5WLEEvVWFNzSLZqkBlsJBtFeL1h
      pGoHGXnxfN4YfqPOcP9xBOmpOcLOjVs4FUhiyuKlzB6bhOZfeWYvhBlsPs72DUfQLFzOwlzT
      B1ODgQP8zy/2YLzuCi6bkXP2naKvMKMG8B9HBFd3M7XVrURsmeRmJGFS/YuPFoUoPtcAPZ1+
      LDmp6M+8XbCfmope5ClJJNn0fK7D7/9gRg1glAuaUWe4US5ozrkL1NfXR29v75dVl1FG+dI5
      5xQoGo0SiUS+zPqMMsqXyugaYJQLmtE1wCgXNKMGMMoFzed0hQgz3NlOn++0A4tYisZgw2rW
      IPv/WuARxtXdRUAdh1Un/5xiFoFYyI9r2MmwJ4YhKQmjbOTvQjSEd3iQ/iEvEZEMtd6E2ahF
      KR0dp/5VfE4D6GPzr77Bc90JxBskiCRy7JlzuPKWZUxyfF5pwleBQXb95TvnJ4kMDVB/7BiH
      y3fz7qouLnv+Wa5LAmJhXB0n2LLqLbad6icskmPLmcElyxYxKcuKYtQGPp1ogOH+QVwRJbZE
      86dFjwfOcwo05Rv/wzNP/y9/+sVd5A+/y8qNtQQ//WcXNp5mDp4YxD51LKnhMz4hoSEaS/ey
      vyuT2x77M3/55a3keo6zY0cZHb5/W22/WgR7KN/4Fi+9eojuz/iTL0ASKUajT2XC2DS2VHcx
      HMtH0dNCbU0TA0ExWkcauVmpWLU+mo82EklIQDHQRJ3bwqTJ6cTayimv6yMgSNGYE8kuLMAh
      89Lb3kBdYzfeqAxTcjY56fEYlGE6TxyjV2JBcHbR7w4iM2UxbkIWBgIMtldTUdeDPyZBa08h
      OysDh+69Jg7TeKQLRU4KDoMaKf1UbO0mbkEBOm8nNYfbEOwKhrv6CUqNJGXmkJlsRBZ20dFQ
      R2N7P37BT22/b8QbFIi4WigvraE/AEqDg8zCQpL1EQbb2uhxCqh0An3dAawZGSTbdSMP2zyR
      m++eCOzn4JkPMiYgCFJkFgsmtQypoEWvUyCLRj9wlY55aCkrpc80hrFpeiTEcLeWc8KXzJRc
      A97uRqpq2nCFJRgSMsjJTMGiDtFTV0tDWw/ukIBYZSVnXDHJOhnR7gr2tmsoSY3S2NCPNr2Y
      FNkgDdV1dLkiiFVWMvKzSXGczQVCIBLupnJnHSGrEk/fEDG1hdSsfNLjNIhDw3Q01lPf1k8Q
      JfasQvKSzKjCHRw56CR5moOBsgr6zWOYnaXF2V1PdW0Hw2EJpoQMsrNTULhaqK1rotcdRW5M
      pqAoA5tGweCp7dTGktG5Wulyx1Cak8jPTSbaUklpbSOtHi97NikYyMwjJz0B3Tm+1F+AJDJG
      KDBIW8cgWouBWH8zZTvf5UiLl0gshD9WRe/cpcyfHGHv8y/SkpmDXR7EqRhL4Vgx+595hSMa
      CwaxCI1tCGViJjJvKdve3sGpYQkaSQjv4VNMWXoZc0rklK/6H7brl1CgdjIw1EZt7U6Cjz7K
      LEUTB9e+xp5BA0aVCE1SCK016QwD6GDPc6clkQY1UupY88g2LlqQQ3b/Md78w9uorpuFrqeJ
      5g4ftqKlrLhpKpKqPWzYcpRuvxSlWkyXM4BWAGL9lK1dy7aeAITCRKNiTnUKXHt5Ii1Ht7Jh
      SwfGiWkQNjPZmkCi/VMSbiuNJOWXUFi7nw2verHGBmgNJlA4u4B4/XsXBWnb9QJPR6P8/r5Z
      mMVuTqz9G29aHyLf0s/Rje9SNhSCUICQpJ7eeUuYP0FNR10VxytbGI6Ct7uLg55v8vDibMIV
      q/jliyruWGxmyCsnW2nD37OLtbtbUGjViKVxCCYr9rMaAIT9J3nzsWcRLV+M2dlKvyuEKdvF
      VddMQ9FQyt59pTS7IxD04Cvv5bLlixgrPsY/f7WPwvuLEdcOECtJZpymgc2vv81JlwK1Sk6c
      T4pBE6Pv5C6O1vQSjMYIeA/R4L+Oa6dnUbfhNzzhu4nLE3pp6ein2xlhxo33UuJso6mrh/5A
      gOpyNUqVg+TUBM715M/LABp3vsQ/W2WEQ076hpNZfHUKvvpd7NxSTqhoCpk6Lw1HjnKkPIOC
      wkzAT39PkLErruXGAgfK6BFOlfaivetSFucmYjXqUCsGqT9YQaMvnSu/eS0l6j62Pfc3DpZX
      kJs+EjhEZi1k6dVjcMhqefKO/6KmU2CyfZDWxm60UxazcGwiNqMRg/6zN0+s0JMx+QquyPBR
      tnYVO6vaGXB20bHzOAP68Vx/xyJyDP2s/VEpJ8XAwFFefnEP0kuWUGAM0d9QQenW3YxfuAIp
      ITwuP/b4CVwyo4hEvexT55pCLEYsFkOkUhAZ7qcvFkAs1yAXCUR11R9QAAAW00lEQVSjjLwp
      sYXxS+ag+cMejvdPZZa6liMVOub9IIHh2jfYsPUUljlTSBYNUH3sOMeMqRQVTkFvseNIDKMK
      hentPMSGg3U8cFEmCDEinkF8hgVcdeU4HIFGtpR3MChP4YoF00gxGzDYTSPquE9AIjeSPed6
      rssSaD24lje37qK8Ng7V4b0cqPKRUpyNMehh7/YdHJ02gdwUgAE6+3SsuHEFeXof9TvWsasn
      ka/ffzNjHSLCwRC9xzawa98x3MZ8sh0yesu38faeIhaPGUmUKNFnsvjm5SiGG1nz1x9RN6Dg
      2llLuLotzIHBTJY/tJS0z/LeP8M150QkEqE0pDHzihUsylXi9zhxeZRo1HIkMhM50+czc2I2
      FgWAjMSJ85iW40AtFSOSZbHw1mmo24+ze+N61mzcR33PEB5vDIk1jSS7Eqk2mfQUNZGAE39g
      5FRaa7aiU8hAqkKtAJCgMWcyYf5UdP1l7HpnHeu2HKJ+IMBnO+UTIZOpMZr0yOUSZHL5yIgX
      GGbAqcCWmITVrEAskSIVn5ZEDnbQEjZg0koQSVXYcqey9LJJxEtH6mNMyWfsuGKSP0PnB4h4
      +6kq3c8p8Rhu/Ma93HvPzUyzDnLi2FFaBkPvX6fOXsDlKa1sKe3FVbWThsRLmRoXJTA0wCBa
      tEoJYpWdgpmzmTUhE3V/HfsPlVHX5yIiiFEqFbx/9ikSozTmMGvhROJVEsQaO3ljJjPR6uHk
      3s2seXszR2t78Yc/ud5iiRKtXo1UqkZvScCo9uDq7cfpDhCWqlDIxUj0mcy54iLGJhpPq9JM
      jF+yhEKbDFE0jM/pJpQ2hqIEFVKJEpVaRcg/RCASRalUIJUoSJhwMVdMy0Z/Ou6UwmLFrJAi
      lihRyj+5fp/GeX0BMuZ+jVs/JIn0otJZsMQbSBu/kKsmxiP19TMYUKCWdAJK9DolEvHpLuHz
      oRl3CdfI/XSeKmP7zu1staawSCsm0lxPS9dEzNoe6hq9yAxm1KpPqm4UQSpgyV7M5cVeeisP
      sOFgKQcdORSm6s/YDfDi8oSJhTx019fR+WmKMKUWg9ZPbXcvTlcIvWQYlz8yEhbFmky6cg+G
      3IVcPzUBWdiLy+VGJIY+ZCiVKlTK/8PjjUWJ+L14giHCAoiFKJGQB18gTCR2xmJZFse0ZWN5
      8x/vsiGulZxl92CXgcfiINEQJHPKZSzNM4LXiTssIVx7kON9YmZdeQWLchScfOkg6zrfK0+M
      WGNEd7oDRaJi1JYMZl2SQ3Cojp1r3qGsNJ7srHQMxrNXWxCiRKNRooFhuprr6PPYmJDqQNSq
      wxpOYsrCKxgXryQ41ItHpkbqBjBgNIx0ZJFUhsasR374KGXtY5gUJyIUDCFXmVDrHNjHzOGK
      WVnocNHZF0UlO8dwIhYjkUYI+dx4PVFiahEikfh0svOz8wVLIlU4MksYV1TNtpcfp2KNGrlG
      T970i5k/+eMVF6J9HH1rAw2eIJFIhKgimQkZaWRpo+S2bebNPz3COnGEqDaDOfOLiddJTouv
      P1YSIXcnZRve5bjLQywQJGTIIjnedEasGxtpuT5Wv/IXTr2bSMY4xac3Xp7A+OlZ1G/axt8f
      2Ys5xYav14dYAEwTuf7avbzwyuP8YqMKmVxHcv40Fl6af84ih0pf4+lNVQz7uqkItlD3+A+p
      ibcz44rbyZ84k7oNe3ny0X1IiBJTJzBh/iTSP5JtWp9/MTNE32dN11weK9CDJII9cwLTCmrZ
      +fRvOKxRoNA4KJp1EdNSs8hTVbH7hb9SlZqNwxV4fxH/sacYHKbl+DbeKe0iEAni9WgoiLej
      l/dw8JW3qLXM47KZ2ZjU7z1VgaC7kU1PPkKp4CcqNZAz/VLGZ6QQCZbQuG4Xr/6pgtVKBWp9
      KjOvupypH5lPiaQa4ovmsaB6DWv/8kvelitILJzB3MmTmZLZwdZNT/HYNiVKuQ7L+MXcvED/
      sXq/j8xEYkYiitLtPPVIE1MWLGXBzBIc59gP/Zy+QAG6Ko7jjptAjvXD3UiIhnAPdNDS0o0r
      EEOk1OBISiPRJqG/up2oI4UEiwaZGITIMC1VdXS5A0SRojHHkZaRilHiZ7C7jZb2fvwxGfq4
      FNISbWgVEfpqKhk25pFuUyPBR/vJE0RSJ5OkHKarvomOYS9RkRydNZGUlHhM74dqjOLqqKO+
      fYCAoMaaZiHWGMQxPRONv4/WU04MhbnYFCGGu7sZcEmwpieiiQzQ1txK16AfidaAOuJGljiG
      TLuKmLuNurp2nIEoIqkKkyOZ1BQD4b5uBtxSrGmJ6D+yegz0VHOiaYBg+IOE1VKFmsTc8SQo
      PfS3N9HW4yKEHK0tkdQkBwbVR/KRRTp446Hb2DnpKR6/MR0FIESCuPpaaWrrwxMSkCoNxCUn
      E2+R4mxporXHhaC2YFMH6CaeSZlWGKyntFdHSWE8SkAI+xnqaaGpYxB/WECmtpCUloLNf5DH
      /3aY5KXXcfmUdLQyESDgd23h11e9jOnBu5mkF1AaHCRnpGLTSBGCLno6WunoGSYQFSHXWEnN
      SsUqHeLUCTdxEzOxng6OIERDuPtaaWzpwRORoLcnkZoSh9TVRWt7J4PeEEjUGJPSyY434m05
      QquiiDFJGqIhP72tp/AaCsmyyQi5B2hvaaJrGMxJ6aQm2lCfY6QbdYb7itG/9yl+/dpRPNY5
      fPvbKygw/asDUQapXbeSvRQwf84kUvTvnYCPGMDvl29kzDN/YlnCv7ga/yJGDeArRtjVTXu/
      D4nOTqJVg+RcE9wvhBh+5xBBmQatSskHXhkCsaiH/lY3yqSEj33pviqMGsAoFzSjHiajXNCc
      cyOku7ubrq6uc10yyihfaUanQKNc0IxOgUa5oBk1gFEuaEYNYJQLms/pCuGj9ehBTvUHiSFC
      LFVhS8knL8uO+os2KXcXFS0utHGJJFu1o/nHvkw8XVQ2u1A7Ekm2aT+hs8QIevtorWlGljGF
      tE/wGfrobyKefpobm+lxSkidNIGkcwoJBcLubupr6ukY8BIRKbFnlVCcYUYmxAh5+2isqKJ1
      OIramkRmdiZxehkiYoR9TnraWmnuFEgan0uSQY0UEIQIQ43ln9cAnBx6/jesYiZjE6REowHC
      +yvoWXEjS7O/4PCpvSdYvbqWrEWX4bBqPyEXVIyAq5OGygbkuXPINgOE6G+spH5QSnJWHonG
      L/ekxtNVQ32fH3NyASmmEW+z/updHHElMKskHe3/xVHuE2g/soYm8wJmZWrPu6yz0lvB2jXV
      pM6/lKvOYQDe/lNse/ll9Ld+RgPwNLL7naM09lVx7B03F//90wxgkFO7t7Grog1vDKKhYYZ3
      VxO7/27GaV3UHXiLVdvaEWsUxAQ19RMXcslFY7AF2ikvK6f2VBlbN4VY8utvYj9tAJGuY7y+
      ctX5TYEKrniQ73//ezz0jeWMk1Wyblst3vMp8HMTxdNfy563XuXY+7u2McI+N8PDboKR2Ll+
      /C9hqPEw27Zv5VR34P2/hT2D9A17iX6aF+pnpHrj47xe6vxCyvpSiQbwiiwUzijG8VnirkWD
      hCQJTL70Fu77zvf43gNXY69dxeZTPnzD9RzcUIpm3p088J17uXqigc7jezje4YNIiLDYSHph
      FvH6DycBHCp7i7X9RV+MJFKpiSMnK463qgfwRv14m05yYH8ZHR4xxtRipkwuIc2mpq90Hfu7
      xUiHeulwBpAmjGfZxVOx4qG9YjcNulnMz9ERHGiiurkbcfxYPpxXI0DbkR3sPdnEgC+KTJ3C
      5MsWkSurY/vLmzjS0Ibijb/grshkwvRpxANqlRqFQgGE6KvYz85jNfS6BbQp41i4YBJxshBt
      pW+zo9dMWqiV6t4QhtRips6YRLrhg8cTc7dyeM9+TjT3E5GYKVhwKbMzdET9XZRt3syxNi+C
      wkx6yTjybG4ObN/H8XovHc6nqS2ezCWzxqMCTAY9EokYWnby5G4PmYYhmju8KEypZGVo6Kmu
      oidoJGv8VKaOTUPUUcaBw2XU9/oQJFpSJi3komINNetf451TIVr7XuAvQ/HEj1vENeNN9DWf
      ZP+eUtp9YowZY5kxqYRUi4T+yn3sPFpDrzuKTJ/B7MsXkGf4v7z+bo6sqkM/bxyZFi0SoZkd
      zzSTfefMD2Lzxzy0V5RS1SYle8Z00vUwVLuHw31aCgsLSDQqRpz6DEVcdnUBPudWtn6me9sZ
      uzAOsViMWATBQReeoBajMkKgv46GvnSWTE1DqxJIykjHUH2Q5rZ+ohlZTJ+dBX072Clr/VCJ
      Yq0BveQLWAQLQgy/p5NTNZ2YE+3EOivZ/c4mKgflmEwSeo9v4d2dZXQMR+mr3MI7B2rwyo3Y
      rUq696zkn3s7iYW8dFZsZ3/jyPcjPNRGVcUxqns+KrEP4fZGUeltOOLsqLt28sxbx/FIVRis
      RjRKBXpLPA6LEY0iQk/tIY6UVtLjBV/Tft7YcID2oAKLVYfr6Kv87e0qgpEgnWWbWLO/kZDS
      iFbkouLwdvbVDHxw29gAxzfvpKI7hNYah1XayqZn3uaUL8xwxTu8dGgAg92ORaeEgJ+IUove
      oEOt0WC0Oog361DIJPSefIct5S34QjHoOMhLa44yIDWgV0Pj3tfYemIImVFNqLuc/TsO0uSM
      EvCHEGQaLDYHVlEbm1/ezilXCJXZgVElRq63Eu+wY9FKGO6q4+juA3SJjdjMMvqO72Xv4VP0
      9tSy7d1jdAQVmB1WDGIfw/7/61eoj+Mbj9Dg9BEFBKGdfS8foPPMS0Qiws42Sg/v4FjjEDGG
      qN13gIq6Xvyx8+hqEilSiRixKMpAxSaee2ot3qm3sjRHQdTtxSu2YDQAiNBo9GikclzDLgLn
      KNI05iqWp9ef3xfgxKu/5Ec7JAgiUOqmce38BNxNO2juMDH9W9czMy5G09bnebaihubeIkyA
      0prF5PlLyDBGmcQJ7txynNsmj/+MdxQjF/vpbKimyx3A317HqfZWIndPYMKiaTQ1tGOcfw3L
      CgFclL//uzDtZTtpVxVx3SVLKY6TMXCgk/v+tJvGy74GYhkaRy7TF0wj1nEE39p36B30wHuJ
      d5z17Nu7h8MuBQ67AZm/jfIjdUwYvAq7v4+25j6KJoxjbGE6yYlWTCYdygkl1MR6KLpoGYvz
      R3zY+z/aGk0i4+dfTKKrGaF5B3W2YhZebKFB4WHTsV6cXkiRxvD2tlHdNkzA2UztcS/twcu4
      eO4VTN31OD0FS7nm8iSIuWk4UMq29bsYTMkhThWkp6EJnTyDcXkJDLR30G1Vk54zhvz0eOzG
      f8F2gkhNQnYhmWVttFVU058gp2JQQ+L4NBx62WdIVngOYkNUblzF6/tasRQt5ab5c8nWwkdD
      N8diUSJCDLFEcs4NE19nJVVe8/kZQPzYBSwZo0QsU2GJzyQjIUpdbQhBZMVmUyOVgtVqAlwE
      giOjuUSpQikRIZKoiXOYCQ27P3solY5jrN5YjWL8BObH6RBVuSgtj30G2WMMj8uF2mzDrFEi
      kUiwp6ag6atlCJCIxEhUGrQKKV6xBKn0I4/O72E4aqdg5gQmZtlQAEuv1pBulmHQXM0Dyw9R
      31bO2+U70KbN4uobFn22RBIyFRqlFJFLjEQmQaHWoJRKkUplyKRhCLZRuvMA9R4LJbMnY/GX
      0Vs/iAjh420WwoT8IWT6AmZdvJis04tKXXwWyXEaLr15Gccr62k7uPb/tXeuwVVVVxz/ncc9
      995zz33l5knMgwRKmpBMUgw0EDFTHuMIEaIRR5zaKm2/oGhtxVHKB8Z2Op2aTmfa0en4KJKq
      I45TjaVKwWKbKijOZCAhI6A8SgghCcl9nHvuufece08/JBRxMowSp5/6/773Xnvvtfdee836
      r8WBnhytmx6js+7ahYVMM4VlWwhfOuJUwB2pom5+ESOffcLhgyKpcAG1laVos9K0NGf+/gp/
      3D/Owls7WL20nhKfjICFHAkTyvYxMgoNhQ5JPY6ZtQiFglyLKXniwMucyts2OxOooKaFm1pb
      WbZkETXlIRRJxZ8XQMoNcrR/lFTqAoPHToLjJxycugVztk3WATtxij37+ihrXEgEsC2bWDRK
      xpxk+OynnL4ww3c6fp4Tl1zMbVpMy+JvEOTyD0pAlNw4mIyNjWNNE8yvwMWc8nJGP+nn+IUJ
      MlaCI/vfY6S+hmuXtJtGXgkVmk407qastpllLYupK/NiWw762AThxlWsuaOdVTcWYhz/kE/H
      QJZdZAyDaFzHtHNcV8RJJsbwUBK5eAHNLY1U53lwhCvK73Z7mBgeRrcdsrjRwgX4tTimOIem
      pUtZ0lBFRHXhXJpE91fQ+J21dGzooMH5mPeOjc08pm2RMVOkUhMMHhtk0lEoCgWmifFRJiYz
      ZNNRzhzq4/RM7WU/c2vmo0nnePudfxMoKKdijm92ihYfZN9fTxBacgurlzVQ4nNNHUpBRg3X
      smDuEP989yiTiRFODgwwqudTXVFwzTE9LoWRs599zZRIwUNJTTOtLefY/fSP6UmJBCoWsbaz
      lZpiN2eA8fd38sT73dgOBOvv5vHOeXjcJkVlc7j4zHZ+8I8qaspDiL4Z/GIVzay8oZfd27fw
      +g2N3FJyWXwJf7iC+toCnv7dZo7uX0rHPZ1c4WiIFHx7AxuGXuS1rod5Xge1tIkHtqwmAjNv
      5OfhmceqO9sYeaWHn2/uxhLd5Fcu575Hq3GP9rHzpd8zHM3geCLUtqxnQSHkq3XUfNTHn3/z
      ED1163jk3vavvthqJfWNAXb1/JatB8ppqveTtYX/buzCFZ34n/oV9x8toX7dQzzWtoibl5/k
      1e5t/PBZEVe4lJb2jayvkzn2zqu8++EpYmkBfI3cvSgfyxzirV8/yZH6rexYXz3VafwsvW92
      88K+48iRWlZ2rKBpbhARgbrmFH/oeoS9aiU3dswjH30GoQU8pfNZEOrlkGjjLy6jQLn6Bbm4
      9xc8umsAMxNn/FKCgw/cxV+q6lj/o4eZN/IWb3+g09D5Pdqqp7mMI6cZHD1N/0u/5MgbCiIg
      SDJ193axbWUFy+9cx7nnnmLzmw7ByiZW3b6WbxW7OPevXbz42h76zycZGzHofeJjdrsruePJ
      HbTf9jgbdz53vcFwNsbEBJaaT9DzhXPm5LDSBolEkkx2iu6naSpul8RA94M8e+lmNq1ZQpFf
      QVaD5Pk9COTIpnWiMYOs4EJRZCRJRHb7UIU0McNG9nhRFQEzHiWRsnBkN5oCuq0QyfMh5bJY
      qQQx3cSRPfj8Gi7bwMxKeFQfijTlFo0nTaysg6T4CAY1XIJDxoiiOxoRv0LOTk/VqpVVAt4r
      hkzONkkmdIy0jYOA5FIJhDXkjE40YWBlHQTRhUfV0HxuJMcildTRjTRZl4+QX0VMx9BRCapu
      JCvORV0mEvEhZm1MPYqthAl4BSzTIJVxUFQNydJJ6AaWI+H2yGRNUCMBPJIIlsHkZJyMI6Fo
      IcKqiGUa6LpBZloer6bhUwTMpE7SzJBzQJC9BMMBnKHX2f6z46zt2kpb4fRcsxZGMk7csBBd
      XjTNh0eREYUcmWSMmJ4mh4wn4MGJZ/EWBZDtNEYiieiL4FMglz5P78t/4mCiilvvuZ36iHSV
      /W8nJxhPZK5SG1FWUJ0JDu7dw2Gzkfu+exMll/NBWkkmYkkyX3BnK/588lSJXDaNHotjWA6y
      24tP0/C4ROxUnIRukMl+vpWELy+C5nIwE9H/bTRof/eDvGC089O72igNzSKXxf8xaziOzcDz
      P2F/7Q62tISQviZi2Wj/39j1TBeHvWu4f9NGVnwzH/lL9W0zOvgRHxwapHjN91lcKF9n8uGv
      hv8Akfl4/GNDPkUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
